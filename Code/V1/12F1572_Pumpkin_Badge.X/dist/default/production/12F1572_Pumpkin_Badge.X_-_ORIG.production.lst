

Microchip Technology PIC PRO Macro Assembler V1.38 build -256452561 
                                                                                               Mon Oct 29 21:01:42 2018

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	12F1572
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	pa_nodes,global,class=CODE,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     	;# 
    38  0001                     	;# 
    39  0002                     	;# 
    40  0003                     	;# 
    41  0004                     	;# 
    42  0005                     	;# 
    43  0006                     	;# 
    44  0007                     	;# 
    45  0008                     	;# 
    46  0009                     	;# 
    47  000A                     	;# 
    48  000B                     	;# 
    49  000C                     	;# 
    50  0011                     	;# 
    51  0012                     	;# 
    52  0013                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0016                     	;# 
    56  0017                     	;# 
    57  0018                     	;# 
    58  0019                     	;# 
    59  001A                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  008C                     	;# 
    63  0091                     	;# 
    64  0092                     	;# 
    65  0093                     	;# 
    66  0095                     	;# 
    67  0096                     	;# 
    68  0097                     	;# 
    69  0098                     	;# 
    70  0099                     	;# 
    71  009A                     	;# 
    72  009B                     	;# 
    73  009B                     	;# 
    74  009C                     	;# 
    75  009D                     	;# 
    76  009E                     	;# 
    77  009F                     	;# 
    78  010C                     	;# 
    79  0111                     	;# 
    80  0112                     	;# 
    81  0115                     	;# 
    82  0116                     	;# 
    83  0117                     	;# 
    84  0118                     	;# 
    85  0119                     	;# 
    86  011D                     	;# 
    87  011D                     	;# 
    88  018C                     	;# 
    89  0191                     	;# 
    90  0191                     	;# 
    91  0192                     	;# 
    92  0193                     	;# 
    93  0193                     	;# 
    94  0194                     	;# 
    95  0195                     	;# 
    96  0196                     	;# 
    97  0197                     	;# 
    98  0199                     	;# 
    99  019A                     	;# 
   100  019B                     	;# 
   101  019B                     	;# 
   102  019C                     	;# 
   103  019D                     	;# 
   104  019E                     	;# 
   105  019F                     	;# 
   106  020C                     	;# 
   107  028C                     	;# 
   108  030C                     	;# 
   109  038C                     	;# 
   110  0391                     	;# 
   111  0392                     	;# 
   112  0393                     	;# 
   113  0691                     	;# 
   114  0692                     	;# 
   115  0693                     	;# 
   116  0694                     	;# 
   117  0695                     	;# 
   118  0D8E                     	;# 
   119  0D8F                     	;# 
   120  0D90                     	;# 
   121  0D91                     	;# 
   122  0D91                     	;# 
   123  0D92                     	;# 
   124  0D93                     	;# 
   125  0D93                     	;# 
   126  0D94                     	;# 
   127  0D95                     	;# 
   128  0D95                     	;# 
   129  0D96                     	;# 
   130  0D97                     	;# 
   131  0D97                     	;# 
   132  0D98                     	;# 
   133  0D99                     	;# 
   134  0D99                     	;# 
   135  0D9A                     	;# 
   136  0D9B                     	;# 
   137  0D9C                     	;# 
   138  0D9C                     	;# 
   139  0D9D                     	;# 
   140  0D9D                     	;# 
   141  0D9E                     	;# 
   142  0D9F                     	;# 
   143  0DA0                     	;# 
   144  0DA1                     	;# 
   145  0DA1                     	;# 
   146  0DA2                     	;# 
   147  0DA3                     	;# 
   148  0DA3                     	;# 
   149  0DA4                     	;# 
   150  0DA5                     	;# 
   151  0DA5                     	;# 
   152  0DA6                     	;# 
   153  0DA7                     	;# 
   154  0DA7                     	;# 
   155  0DA8                     	;# 
   156  0DA9                     	;# 
   157  0DA9                     	;# 
   158  0DAA                     	;# 
   159  0DAB                     	;# 
   160  0DAC                     	;# 
   161  0DAC                     	;# 
   162  0DAD                     	;# 
   163  0DAD                     	;# 
   164  0DAE                     	;# 
   165  0DAF                     	;# 
   166  0DB0                     	;# 
   167  0DB1                     	;# 
   168  0DB1                     	;# 
   169  0DB2                     	;# 
   170  0DB3                     	;# 
   171  0DB3                     	;# 
   172  0DB4                     	;# 
   173  0DB5                     	;# 
   174  0DB5                     	;# 
   175  0DB6                     	;# 
   176  0DB7                     	;# 
   177  0DB7                     	;# 
   178  0DB8                     	;# 
   179  0DB9                     	;# 
   180  0DB9                     	;# 
   181  0DBA                     	;# 
   182  0DBB                     	;# 
   183  0DBC                     	;# 
   184  0DBC                     	;# 
   185  0DBD                     	;# 
   186  0DBD                     	;# 
   187  0DBE                     	;# 
   188  0DBF                     	;# 
   189  0DC0                     	;# 
   190  0FE4                     	;# 
   191  0FE5                     	;# 
   192  0FE6                     	;# 
   193  0FE7                     	;# 
   194  0FE8                     	;# 
   195  0FE8                     	;# 
   196  0FE9                     	;# 
   197  0FEA                     	;# 
   198  0FEA                     	;# 
   199  0FEB                     	;# 
   200  0FED                     	;# 
   201  0FEE                     	;# 
   202  0FEE                     	;# 
   203  0FEF                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  0011                     	;# 
   218  0012                     	;# 
   219  0013                     	;# 
   220  0015                     	;# 
   221  0016                     	;# 
   222  0016                     	;# 
   223  0017                     	;# 
   224  0018                     	;# 
   225  0019                     	;# 
   226  001A                     	;# 
   227  001B                     	;# 
   228  001C                     	;# 
   229  008C                     	;# 
   230  0091                     	;# 
   231  0092                     	;# 
   232  0093                     	;# 
   233  0095                     	;# 
   234  0096                     	;# 
   235  0097                     	;# 
   236  0098                     	;# 
   237  0099                     	;# 
   238  009A                     	;# 
   239  009B                     	;# 
   240  009B                     	;# 
   241  009C                     	;# 
   242  009D                     	;# 
   243  009E                     	;# 
   244  009F                     	;# 
   245  010C                     	;# 
   246  0111                     	;# 
   247  0112                     	;# 
   248  0115                     	;# 
   249  0116                     	;# 
   250  0117                     	;# 
   251  0118                     	;# 
   252  0119                     	;# 
   253  011D                     	;# 
   254  011D                     	;# 
   255  018C                     	;# 
   256  0191                     	;# 
   257  0191                     	;# 
   258  0192                     	;# 
   259  0193                     	;# 
   260  0193                     	;# 
   261  0194                     	;# 
   262  0195                     	;# 
   263  0196                     	;# 
   264  0197                     	;# 
   265  0199                     	;# 
   266  019A                     	;# 
   267  019B                     	;# 
   268  019B                     	;# 
   269  019C                     	;# 
   270  019D                     	;# 
   271  019E                     	;# 
   272  019F                     	;# 
   273  020C                     	;# 
   274  028C                     	;# 
   275  030C                     	;# 
   276  038C                     	;# 
   277  0391                     	;# 
   278  0392                     	;# 
   279  0393                     	;# 
   280  0691                     	;# 
   281  0692                     	;# 
   282  0693                     	;# 
   283  0694                     	;# 
   284  0695                     	;# 
   285  0D8E                     	;# 
   286  0D8F                     	;# 
   287  0D90                     	;# 
   288  0D91                     	;# 
   289  0D91                     	;# 
   290  0D92                     	;# 
   291  0D93                     	;# 
   292  0D93                     	;# 
   293  0D94                     	;# 
   294  0D95                     	;# 
   295  0D95                     	;# 
   296  0D96                     	;# 
   297  0D97                     	;# 
   298  0D97                     	;# 
   299  0D98                     	;# 
   300  0D99                     	;# 
   301  0D99                     	;# 
   302  0D9A                     	;# 
   303  0D9B                     	;# 
   304  0D9C                     	;# 
   305  0D9C                     	;# 
   306  0D9D                     	;# 
   307  0D9D                     	;# 
   308  0D9E                     	;# 
   309  0D9F                     	;# 
   310  0DA0                     	;# 
   311  0DA1                     	;# 
   312  0DA1                     	;# 
   313  0DA2                     	;# 
   314  0DA3                     	;# 
   315  0DA3                     	;# 
   316  0DA4                     	;# 
   317  0DA5                     	;# 
   318  0DA5                     	;# 
   319  0DA6                     	;# 
   320  0DA7                     	;# 
   321  0DA7                     	;# 
   322  0DA8                     	;# 
   323  0DA9                     	;# 
   324  0DA9                     	;# 
   325  0DAA                     	;# 
   326  0DAB                     	;# 
   327  0DAC                     	;# 
   328  0DAC                     	;# 
   329  0DAD                     	;# 
   330  0DAD                     	;# 
   331  0DAE                     	;# 
   332  0DAF                     	;# 
   333  0DB0                     	;# 
   334  0DB1                     	;# 
   335  0DB1                     	;# 
   336  0DB2                     	;# 
   337  0DB3                     	;# 
   338  0DB3                     	;# 
   339  0DB4                     	;# 
   340  0DB5                     	;# 
   341  0DB5                     	;# 
   342  0DB6                     	;# 
   343  0DB7                     	;# 
   344  0DB7                     	;# 
   345  0DB8                     	;# 
   346  0DB9                     	;# 
   347  0DB9                     	;# 
   348  0DBA                     	;# 
   349  0DBB                     	;# 
   350  0DBC                     	;# 
   351  0DBC                     	;# 
   352  0DBD                     	;# 
   353  0DBD                     	;# 
   354  0DBE                     	;# 
   355  0DBF                     	;# 
   356  0DC0                     	;# 
   357  0FE4                     	;# 
   358  0FE5                     	;# 
   359  0FE6                     	;# 
   360  0FE7                     	;# 
   361  0FE8                     	;# 
   362  0FE8                     	;# 
   363  0FE9                     	;# 
   364  0FEA                     	;# 
   365  0FEA                     	;# 
   366  0FEB                     	;# 
   367  0FED                     	;# 
   368  0FEE                     	;# 
   369  0FEE                     	;# 
   370  0FEF                     	;# 
   371  0000                     	;# 
   372  0001                     	;# 
   373  0002                     	;# 
   374  0003                     	;# 
   375  0004                     	;# 
   376  0005                     	;# 
   377  0006                     	;# 
   378  0007                     	;# 
   379  0008                     	;# 
   380  0009                     	;# 
   381  000A                     	;# 
   382  000B                     	;# 
   383  000C                     	;# 
   384  0011                     	;# 
   385  0012                     	;# 
   386  0013                     	;# 
   387  0015                     	;# 
   388  0016                     	;# 
   389  0016                     	;# 
   390  0017                     	;# 
   391  0018                     	;# 
   392  0019                     	;# 
   393  001A                     	;# 
   394  001B                     	;# 
   395  001C                     	;# 
   396  008C                     	;# 
   397  0091                     	;# 
   398  0092                     	;# 
   399  0093                     	;# 
   400  0095                     	;# 
   401  0096                     	;# 
   402  0097                     	;# 
   403  0098                     	;# 
   404  0099                     	;# 
   405  009A                     	;# 
   406  009B                     	;# 
   407  009B                     	;# 
   408  009C                     	;# 
   409  009D                     	;# 
   410  009E                     	;# 
   411  009F                     	;# 
   412  010C                     	;# 
   413  0111                     	;# 
   414  0112                     	;# 
   415  0115                     	;# 
   416  0116                     	;# 
   417  0117                     	;# 
   418  0118                     	;# 
   419  0119                     	;# 
   420  011D                     	;# 
   421  011D                     	;# 
   422  018C                     	;# 
   423  0191                     	;# 
   424  0191                     	;# 
   425  0192                     	;# 
   426  0193                     	;# 
   427  0193                     	;# 
   428  0194                     	;# 
   429  0195                     	;# 
   430  0196                     	;# 
   431  0197                     	;# 
   432  0199                     	;# 
   433  019A                     	;# 
   434  019B                     	;# 
   435  019B                     	;# 
   436  019C                     	;# 
   437  019D                     	;# 
   438  019E                     	;# 
   439  019F                     	;# 
   440  020C                     	;# 
   441  028C                     	;# 
   442  030C                     	;# 
   443  038C                     	;# 
   444  0391                     	;# 
   445  0392                     	;# 
   446  0393                     	;# 
   447  0691                     	;# 
   448  0692                     	;# 
   449  0693                     	;# 
   450  0694                     	;# 
   451  0695                     	;# 
   452  0D8E                     	;# 
   453  0D8F                     	;# 
   454  0D90                     	;# 
   455  0D91                     	;# 
   456  0D91                     	;# 
   457  0D92                     	;# 
   458  0D93                     	;# 
   459  0D93                     	;# 
   460  0D94                     	;# 
   461  0D95                     	;# 
   462  0D95                     	;# 
   463  0D96                     	;# 
   464  0D97                     	;# 
   465  0D97                     	;# 
   466  0D98                     	;# 
   467  0D99                     	;# 
   468  0D99                     	;# 
   469  0D9A                     	;# 
   470  0D9B                     	;# 
   471  0D9C                     	;# 
   472  0D9C                     	;# 
   473  0D9D                     	;# 
   474  0D9D                     	;# 
   475  0D9E                     	;# 
   476  0D9F                     	;# 
   477  0DA0                     	;# 
   478  0DA1                     	;# 
   479  0DA1                     	;# 
   480  0DA2                     	;# 
   481  0DA3                     	;# 
   482  0DA3                     	;# 
   483  0DA4                     	;# 
   484  0DA5                     	;# 
   485  0DA5                     	;# 
   486  0DA6                     	;# 
   487  0DA7                     	;# 
   488  0DA7                     	;# 
   489  0DA8                     	;# 
   490  0DA9                     	;# 
   491  0DA9                     	;# 
   492  0DAA                     	;# 
   493  0DAB                     	;# 
   494  0DAC                     	;# 
   495  0DAC                     	;# 
   496  0DAD                     	;# 
   497  0DAD                     	;# 
   498  0DAE                     	;# 
   499  0DAF                     	;# 
   500  0DB0                     	;# 
   501  0DB1                     	;# 
   502  0DB1                     	;# 
   503  0DB2                     	;# 
   504  0DB3                     	;# 
   505  0DB3                     	;# 
   506  0DB4                     	;# 
   507  0DB5                     	;# 
   508  0DB5                     	;# 
   509  0DB6                     	;# 
   510  0DB7                     	;# 
   511  0DB7                     	;# 
   512  0DB8                     	;# 
   513  0DB9                     	;# 
   514  0DB9                     	;# 
   515  0DBA                     	;# 
   516  0DBB                     	;# 
   517  0DBC                     	;# 
   518  0DBC                     	;# 
   519  0DBD                     	;# 
   520  0DBD                     	;# 
   521  0DBE                     	;# 
   522  0DBF                     	;# 
   523  0DC0                     	;# 
   524  0FE4                     	;# 
   525  0FE5                     	;# 
   526  0FE6                     	;# 
   527  0FE7                     	;# 
   528  0FE8                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEA                     	;# 
   533  0FEB                     	;# 
   534  0FED                     	;# 
   535  0FEE                     	;# 
   536  0FEE                     	;# 
   537  0FEF                     	;# 
   538                           
   539                           	psect	idataBANK0
   540  0000                     __pidataBANK0:	
   541                           
   542                           	psect	idataBANK1
   543  0000                     __pidataBANK1:	
   544  000C                     _PORTAbits	set	12
   545  0099                     _OSCCON	set	153
   546  009A                     _OSCSTAT	set	154
   547  0098                     _OSCTUNE	set	152
   548  008C                     _TRISA	set	140
   549  008C                     _TRISAbits	set	140
   550  011D                     _APFCONbits	set	285
   551  010C                     _LATA	set	268
   552  010C                     _LATAbits	set	268
   553  018C                     _ANSELA	set	396
   554  0D93                     _PWM1DC	set	3475
   555  0D91                     _PWM1PH	set	3473
   556  0D95                     _PWM1PR	set	3477
   557  0D9E                     _PWM1CLKCON	set	3486
   558  0D9B                     _PWM1CON	set	3483
   559  6CFF                     _PWM1LD	set	27903
   560                           
   561                           ; #config settings
   562  0000                     
   563                           	psect	cinit
   564  07D3                     start_initialization:	
   565  07D3                     __initialization:	
   566                           
   567                           ;initializer for _EYE_CYCLE_1
   568  07D3  300A               	movlw	10
   569  07D4  00D9               	movwf	__pdataBANK0& (0+127)
   570  07D5  3008               	movlw	8
   571  07D6  00DA               	movwf	(__pdataBANK0+1)& (0+127)
   572  07D7  3009               	movlw	9
   573  07D8  00DB               	movwf	(__pdataBANK0+2)& (0+127)
   574  07D9  300A               	movlw	10
   575  07DA  00DC               	movwf	(__pdataBANK0+3)& (0+127)
   576  07DB  3005               	movlw	5
   577  07DC  00DD               	movwf	(__pdataBANK0+4)& (0+127)
   578  07DD  3007               	movlw	7
   579  07DE  00DE               	movwf	(__pdataBANK0+5)& (0+127)
   580  07DF  3006               	movlw	6
   581  07E0  00DF               	movwf	(__pdataBANK0+6)& (0+127)
   582  07E1  3005               	movlw	5
   583  07E2  00E0               	movwf	(__pdataBANK0+7)& (0+127)
   584                           
   585                           ; Initialize objects allocated to BANK1
   586  07E3  0021               	movlb	1	; select bank1
   587                           
   588                           ;initializer for _MOUTH_CYCLE_1
   589  07E4  3004               	movlw	4
   590  07E5  00A0               	movwf	__pdataBANK1& (0+127)
   591  07E6  3003               	movlw	3
   592  07E7  00A1               	movwf	(__pdataBANK1+1)& (0+127)
   593  07E8  3002               	movlw	2
   594  07E9  00A2               	movwf	(__pdataBANK1+2)& (0+127)
   595  07EA  3001               	movlw	1
   596  07EB  00A3               	movwf	(__pdataBANK1+3)& (0+127)
   597  07EC  300F               	movlw	15
   598  07ED  01A4               	clrf	(__pdataBANK1+4)& (0+127)
   599  07EE  00A5               	movwf	(__pdataBANK1+5)& (0+127)
   600  07EF  300E               	movlw	14
   601  07F0  00A6               	movwf	(__pdataBANK1+6)& (0+127)
   602  07F1  300D               	movlw	13
   603  07F2  00A7               	movwf	(__pdataBANK1+7)& (0+127)
   604  07F3  300C               	movlw	12
   605  07F4  00A8               	movwf	(__pdataBANK1+8)& (0+127)
   606  07F5  300B               	movlw	11
   607  07F6  00A9               	movwf	(__pdataBANK1+9)& (0+127)
   608                           
   609                           ; Clear objects allocated to BANK0
   610  07F7  0020               	movlb	0	; select bank0
   611  07F8  01E1               	clrf	__pbssBANK0& (0+127)
   612  07F9  01E2               	clrf	(__pbssBANK0+1)& (0+127)
   613  07FA  01E3               	clrf	(__pbssBANK0+2)& (0+127)
   614  07FB  01E4               	clrf	(__pbssBANK0+3)& (0+127)
   615  07FC  01E5               	clrf	(__pbssBANK0+4)& (0+127)
   616  07FD  01E6               	clrf	(__pbssBANK0+5)& (0+127)
   617  07FE                     end_of_initialization:	
   618                           ;End of C runtime variable initialization code
   619                           
   620  07FE                     __end_of__initialization:	
   621  07FE  0020               	movlb	0
   622  07FF  2DE4               	ljmp	_main	;jump to C main() function
   623                           
   624                           	psect	bssBANK0
   625  0061                     __pbssBANK0:	
   626  0061                     _BTN_DETECT:	
   627  0061                     	ds	1
   628  0062                     _LEDMODE:	
   629  0062                     	ds	1
   630  0063                     _PATTERN_HOLD_1:	
   631  0063                     	ds	1
   632  0064                     _PATTERN_HOLD_2:	
   633  0064                     	ds	1
   634  0065                     _PATTERN_HOLD_SW:	
   635  0065                     	ds	1
   636  0066                     _PWM_FADE_HOLD:	
   637  0066                     	ds	1
   638                           
   639                           	psect	dataBANK0
   640  0059                     __pdataBANK0:	
   641  0059                     _EYE_CYCLE_1:	
   642  0059                     	ds	8
   643                           
   644                           	psect	dataBANK1
   645  00A0                     __pdataBANK1:	
   646  00A0                     _MOUTH_CYCLE_1:	
   647  00A0                     	ds	10
   648                           
   649                           	psect	cstackCOMMON
   650  0070                     __pcstackCOMMON:	
   651  0070                     ?_I2C_Write_Byte:	
   652  0070                     ?_PCA9685_reset:	
   653                           ; 1 bit 
   654                           
   655  0070                     ?_PCA9685_setAllOff:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_InitI2C:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ??_InitI2C:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_InitCCT:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ??_InitCCT:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_InitPWM:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ??_InitPWM:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_initLEDArray:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_main:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_I2C_Start:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ??_I2C_Start:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_I2C_Stop:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ??_I2C_Stop:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ??_I2C_Write_Byte:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?___wmul:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?___ftpack:	
   701                           ; 2 bytes @ 0x0
   702                           
   703  0070                     ___wmul@multiplier:	
   704                           ; 3 bytes @ 0x0
   705                           
   706  0070                     ___ftpack@arg:	
   707                           ; 2 bytes @ 0x0
   708                           
   709                           
   710                           ; 3 bytes @ 0x0
   711  0070                     	ds	1
   712  0071                     I2C_Write_Byte@Byte:	
   713                           
   714                           ; 1 bytes @ 0x1
   715  0071                     	ds	1
   716  0072                     I2C_Write_Byte@i:	
   717  0072                     ___wmul@multiplicand:	
   718                           ; 1 bytes @ 0x2
   719                           
   720                           
   721                           ; 2 bytes @ 0x2
   722  0072                     	ds	1
   723  0073                     ?_I2C_Write_Command:	
   724  0073                     I2C_Write_Command@Data:	
   725                           ; 1 bytes @ 0x3
   726                           
   727  0073                     ___ftpack@exp:	
   728                           ; 1 bytes @ 0x3
   729                           
   730                           
   731                           ; 1 bytes @ 0x3
   732  0073                     	ds	1
   733  0074                     ??_I2C_Write_Command:	
   734  0074                     ??___wmul:	
   735                           ; 1 bytes @ 0x4
   736                           
   737  0074                     I2C_Write_Command@Command:	
   738                           ; 1 bytes @ 0x4
   739                           
   740  0074                     ___ftpack@sign:	
   741                           ; 1 bytes @ 0x4
   742                           
   743  0074                     ___wmul@product:	
   744                           ; 1 bytes @ 0x4
   745                           
   746                           
   747                           ; 2 bytes @ 0x4
   748  0074                     	ds	1
   749  0075                     ??_PCA9685_reset:	
   750  0075                     ??___ftpack:	
   751                           ; 1 bytes @ 0x5
   752                           
   753  0075                     ?_PCA9685_setPWM_Full:	
   754                           ; 1 bytes @ 0x5
   755                           
   756  0075                     PCA9685_setPWM_Full@on_value:	
   757                           ; 1 bytes @ 0x5
   758                           
   759                           
   760                           ; 2 bytes @ 0x5
   761  0075                     	ds	1
   762  0076                     ?___lwdiv:	
   763  0076                     ___lwdiv@divisor:	
   764                           ; 2 bytes @ 0x6
   765                           
   766                           
   767                           ; 2 bytes @ 0x6
   768  0076                     	ds	1
   769  0077                     PCA9685_setPWM_Full@off_value:	
   770                           
   771                           ; 2 bytes @ 0x7
   772  0077                     	ds	1
   773  0078                     ?___awtoft:	
   774  0078                     ___awtoft@c:	
   775                           ; 3 bytes @ 0x8
   776                           
   777  0078                     ___lwdiv@dividend:	
   778                           ; 2 bytes @ 0x8
   779                           
   780                           
   781                           ; 2 bytes @ 0x8
   782  0078                     	ds	1
   783  0079                     ??_PCA9685_setPWM_Full:	
   784                           
   785                           ; 1 bytes @ 0x9
   786  0079                     	ds	1
   787  007A                     ??___lwdiv:	
   788  007A                     ___lwdiv@quotient:	
   789                           ; 1 bytes @ 0xA
   790                           
   791                           
   792                           ; 2 bytes @ 0xA
   793  007A                     	ds	1
   794  007B                     ??___awtoft:	
   795  007B                     PCA9685_setPWM_Full@led:	
   796                           ; 1 bytes @ 0xB
   797                           
   798  007B                     ___awtoft@sign:	
   799                           ; 1 bytes @ 0xB
   800                           
   801                           
   802                           ; 1 bytes @ 0xB
   803  007B                     	ds	1
   804  007C                     ?_PCA9685_setPWMFreq:	
   805  007C                     ??_PCA9685_setAllOff:	
   806                           ; 1 bytes @ 0xC
   807                           
   808  007C                     ?_PCA9685_setAll:	
   809                           ; 1 bytes @ 0xC
   810                           
   811  007C                     ?_PCA9685_setPWM_Simple:	
   812                           ; 1 bytes @ 0xC
   813                           
   814  007C                     ___lwdiv@counter:	
   815                           ; 1 bytes @ 0xC
   816                           
   817  007C                     PCA9685_setPWMFreq@freq:	
   818                           ; 1 bytes @ 0xC
   819                           
   820  007C                     PCA9685_setPWM_Simple@value:	
   821                           ; 2 bytes @ 0xC
   822                           
   823  007C                     PCA9685_setAll@value:	
   824                           ; 2 bytes @ 0xC
   825                           
   826                           
   827                           ; 2 bytes @ 0xC
   828  007C                     	ds	2
   829  007E                     ??_PCA9685_setPWM_Simple:	
   830  007E                     ??_initLEDArray:	
   831                           ; 1 bytes @ 0xE
   832                           
   833                           
   834                           	psect	cstackBANK0
   835  0020                     __pcstackBANK0:	
   836                           ; 1 bytes @ 0xE
   837                           
   838  0020                     ??_PCA9685_setAll:	
   839  0020                     ?_PLED_setDC:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0020                     ?___ftdiv:	
   843                           ; 2 bytes @ 0x0
   844                           
   845  0020                     PCA9685_setPWM_Simple@led:	
   846                           ; 3 bytes @ 0x0
   847                           
   848  0020                     PLED_setDC@setDC:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0020                     PCA9685_setAllOff@i:	
   852                           ; 2 bytes @ 0x0
   853                           
   854  0020                     ___ftdiv@f2:	
   855                           ; 2 bytes @ 0x0
   856                           
   857                           
   858                           ; 3 bytes @ 0x0
   859  0020                     	ds	1
   860  0021                     PCA9685_setAll@i:	
   861                           
   862                           ; 2 bytes @ 0x1
   863  0021                     	ds	1
   864  0022                     ??_PLED_setDC:	
   865                           
   866                           ; 1 bytes @ 0x2
   867  0022                     	ds	1
   868  0023                     ___ftdiv@f1:	
   869                           
   870                           ; 3 bytes @ 0x3
   871  0023                     	ds	3
   872  0026                     ??___ftdiv:	
   873                           
   874                           ; 1 bytes @ 0x6
   875  0026                     	ds	3
   876  0029                     ___ftdiv@cntr:	
   877                           
   878                           ; 1 bytes @ 0x9
   879  0029                     	ds	1
   880  002A                     ___ftdiv@f3:	
   881                           
   882                           ; 3 bytes @ 0xA
   883  002A                     	ds	3
   884  002D                     ___ftdiv@exp:	
   885                           
   886                           ; 1 bytes @ 0xD
   887  002D                     	ds	1
   888  002E                     ___ftdiv@sign:	
   889                           
   890                           ; 1 bytes @ 0xE
   891  002E                     	ds	1
   892  002F                     ?___ftadd:	
   893  002F                     ___ftadd@f1:	
   894                           ; 3 bytes @ 0xF
   895                           
   896                           
   897                           ; 3 bytes @ 0xF
   898  002F                     	ds	3
   899  0032                     ___ftadd@f2:	
   900                           
   901                           ; 3 bytes @ 0x12
   902  0032                     	ds	3
   903  0035                     ??___ftadd:	
   904                           
   905                           ; 1 bytes @ 0x15
   906  0035                     	ds	3
   907  0038                     ___ftadd@sign:	
   908                           
   909                           ; 1 bytes @ 0x18
   910  0038                     	ds	1
   911  0039                     ___ftadd@exp2:	
   912                           
   913                           ; 1 bytes @ 0x19
   914  0039                     	ds	1
   915  003A                     ___ftadd@exp1:	
   916                           
   917                           ; 1 bytes @ 0x1A
   918  003A                     	ds	1
   919  003B                     ?___fttol:	
   920  003B                     ___fttol@f1:	
   921                           ; 4 bytes @ 0x1B
   922                           
   923                           
   924                           ; 3 bytes @ 0x1B
   925  003B                     	ds	4
   926  003F                     ??___fttol:	
   927                           
   928                           ; 1 bytes @ 0x1F
   929  003F                     	ds	3
   930  0042                     ___fttol@sign1:	
   931                           
   932                           ; 1 bytes @ 0x22
   933  0042                     	ds	1
   934  0043                     ___fttol@lval:	
   935                           
   936                           ; 4 bytes @ 0x23
   937  0043                     	ds	4
   938  0047                     ___fttol@exp1:	
   939                           
   940                           ; 1 bytes @ 0x27
   941  0047                     	ds	1
   942  0048                     ??_PCA9685_setPWMFreq:	
   943                           
   944                           ; 1 bytes @ 0x28
   945  0048                     	ds	1
   946  0049                     PCA9685_setPWMFreq@prescale_val:	
   947                           
   948                           ; 1 bytes @ 0x29
   949  0049                     	ds	1
   950  004A                     ??_main:	
   951                           
   952                           ; 1 bytes @ 0x2A
   953  004A                     	ds	2
   954  004C                     main@i:	
   955                           
   956                           ; 2 bytes @ 0x2C
   957  004C                     	ds	2
   958  004E                     main@i_141:	
   959                           
   960                           ; 2 bytes @ 0x2E
   961  004E                     	ds	2
   962  0050                     main@i_142:	
   963                           
   964                           ; 2 bytes @ 0x30
   965  0050                     	ds	2
   966  0052                     main@i_143:	
   967                           
   968                           ; 2 bytes @ 0x32
   969  0052                     	ds	2
   970  0054                     main@i_146:	
   971                           
   972                           ; 1 bytes @ 0x34
   973  0054                     	ds	1
   974  0055                     main@i_144:	
   975                           
   976                           ; 2 bytes @ 0x35
   977  0055                     	ds	2
   978  0057                     main@i_145:	
   979                           
   980                           ; 2 bytes @ 0x37
   981  0057                     	ds	2
   982                           
   983                           	psect	maintext
   984  05E4                     __pmaintext:	
   985 ;;
   986 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   987 ;;
   988 ;; *************** function _main *****************
   989 ;; Defined at:
   990 ;;		line 80 in file "main.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;		None
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  i               2   55[BANK0 ] int 
   995 ;;  i               2   53[BANK0 ] int 
   996 ;;  i               2   50[BANK0 ] int 
   997 ;;  i               2   48[BANK0 ] int 
   998 ;;  i               2   46[BANK0 ] int 
   999 ;;  i               2   44[BANK0 ] int 
  1000 ;;  i               1   52[BANK0 ] unsigned char 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1005 ;; Tracked objects:
  1006 ;;		On entry : B1F/0
  1007 ;;		On exit  : 1F/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1010 ;;      Params:         0       0       0       0
  1011 ;;      Locals:         0      13       0       0
  1012 ;;      Temps:          0       2       0       0
  1013 ;;      Totals:         0      15       0       0
  1014 ;;Total ram usage:       15 bytes
  1015 ;; Hardware stack levels required when called:    5
  1016 ;; This function calls:
  1017 ;;		_InitCCT
  1018 ;;		_InitI2C
  1019 ;;		_InitPWM
  1020 ;;		_PCA9685_setAll
  1021 ;;		_PCA9685_setAllOff
  1022 ;;		_PCA9685_setPWM_Simple
  1023 ;;		_PLED_setDC
  1024 ;;		_initLEDArray
  1025 ;; This function is called by:
  1026 ;;		Startup code after reset
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           
  1031                           ;psect for function _main
  1032  05E4                     _main:	
  1033                           
  1034                           ;main.c: 81: InitCCT();
  1035                           
  1036                           ;incstack = 0
  1037                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1038  05E4  2276               	fcall	_InitCCT
  1039                           
  1040                           ;main.c: 82: InitI2C();
  1041  05E5  223E               	fcall	_InitI2C
  1042                           
  1043                           ;main.c: 84: InitPWM();
  1044  05E6  2283               	fcall	_InitPWM
  1045                           
  1046                           ;main.c: 85: PLED_setDC(50);
  1047  05E7  27CE               	fcall	PL12	;call to abstracted procedure
  1048  05E8  234B               	fcall	_PLED_setDC
  1049                           
  1050                           ;main.c: 87: initLEDArray();
  1051  05E9  223A               	fcall	_initLEDArray
  1052  05EA                     l1637:	
  1053                           
  1054                           ;main.c: 90: if(PORTAbits.RA2 == 0){
  1055  05EA  0020               	movlb	0	; select bank0
  1056  05EB  190C               	btfsc	12,2	;volatile
  1057  05EC  2E25               	goto	l1673
  1058                           
  1059                           ;main.c: 91: PLED_setDC(0);
  1060  05ED  01A0               	clrf	PLED_setDC@setDC
  1061  05EE  01A1               	clrf	PLED_setDC@setDC+1
  1062  05EF  234B               	fcall	_PLED_setDC
  1063                           
  1064                           ;main.c: 92: _delay((unsigned long)((10)*(16000000/4000.0)));
  1065  05F0  3034               	movlw	52
  1066  05F1  0020               	movlb	0	; select bank0
  1067  05F2  00CB               	movwf	??_main+1
  1068  05F3  30F1               	movlw	241
  1069  05F4  00CA               	movwf	??_main
  1070  05F5                     u1897:	
  1071  05F5  0BCA               	decfsz	??_main,f
  1072  05F6  2DF5               	goto	u1897
  1073  05F7  0BCB               	decfsz	??_main+1,f
  1074  05F8  2DF5               	goto	u1897
  1075  05F9  3200               	nop2
  1076                           
  1077                           ;main.c: 93: if(PORTAbits.RA2 == 0){
  1078  05FA  0020               	movlb	0	; select bank0
  1079  05FB  190C               	btfsc	12,2	;volatile
  1080  05FC  2E23               	goto	l1671
  1081  05FD                     l78:	
  1082  05FD  1D0C               	btfss	12,2	;volatile
  1083  05FE  2DFD               	goto	l78
  1084                           
  1085                           ;main.c: 95: _delay((unsigned long)((10)*(16000000/4000.0)));
  1086  05FF  3034               	movlw	52
  1087  0600  00CB               	movwf	??_main+1
  1088  0601  30F1               	movlw	241
  1089  0602  00CA               	movwf	??_main
  1090  0603                     u1907:	
  1091  0603  0BCA               	decfsz	??_main,f
  1092  0604  2E03               	goto	u1907
  1093  0605  0BCB               	decfsz	??_main+1,f
  1094  0606  2E03               	goto	u1907
  1095  0607  3200               	nop2
  1096                           
  1097                           ;main.c: 96: PLED_setDC(50);
  1098  0608  27CE               	fcall	PL12	;call to abstracted procedure
  1099  0609  234B               	fcall	_PLED_setDC
  1100                           
  1101                           ;main.c: 97: if(LEDMODE == 0){
  1102  060A  0020               	movlb	0	; select bank0
  1103  060B  0862               	movf	_LEDMODE,w
  1104  060C  1D03               	btfss	3,2
  1105  060D  2E11               	goto	l1655
  1106                           
  1107                           ;main.c: 98: LEDMODE = 1;
  1108  060E  01E2               	clrf	_LEDMODE
  1109  060F  0AE2               	incf	_LEDMODE,f
  1110                           
  1111                           ;main.c: 99: } else if(LEDMODE == 1){
  1112  0610  2E23               	goto	l1671
  1113  0611                     l1655:	
  1114  0611  0B62               	decfsz	_LEDMODE,w
  1115  0612  2E15               	goto	l1659
  1116                           
  1117                           ;main.c: 100: LEDMODE = 2;
  1118  0613  3002               	movlw	2
  1119  0614  2E1E               	goto	L2
  1120  0615                     l1659:	
  1121                           ;main.c: 101: } else if(LEDMODE == 2){
  1122                           
  1123  0615  3002               	movlw	2
  1124  0616  0662               	xorwf	_LEDMODE,w
  1125                           
  1126                           ;main.c: 102: LEDMODE = 3;
  1127  0617  3003               	movlw	3
  1128  0618  1903               	btfsc	3,2
  1129  0619  2E1E               	goto	L2
  1130                           
  1131                           ;main.c: 103: } else if(LEDMODE == 3){
  1132  061A  0662               	xorwf	_LEDMODE,w
  1133                           
  1134                           ;main.c: 104: LEDMODE = 4;
  1135  061B  3004               	movlw	4
  1136  061C  1D03               	btfss	3,2
  1137  061D  2E20               	goto	L4
  1138  061E                     L2:	
  1139  061E  00E2               	movwf	_LEDMODE
  1140                           
  1141                           ;main.c: 105: } else if(LEDMODE == 4){
  1142  061F  2E23               	goto	l1671
  1143  0620                     L4:	
  1144  0620  0662               	xorwf	_LEDMODE,w
  1145  0621  1903               	btfsc	3,2
  1146                           
  1147                           ;main.c: 106: LEDMODE = 0;
  1148  0622  01E2               	clrf	_LEDMODE
  1149  0623                     l1671:	
  1150                           
  1151                           ;main.c: 107: }
  1152                           ;main.c: 108: }
  1153                           ;main.c: 109: BTN_DETECT = 1;
  1154  0623  01E1               	clrf	_BTN_DETECT
  1155  0624  0AE1               	incf	_BTN_DETECT,f
  1156  0625                     l1673:	
  1157                           
  1158                           ;main.c: 110: }
  1159                           ;main.c: 112: if(BTN_DETECT == 1){
  1160  0625  0B61               	decfsz	_BTN_DETECT,w
  1161  0626  2F14               	goto	l1763
  1162                           
  1163                           ;main.c: 113: if(LEDMODE == 0){
  1164  0627  0862               	movf	_LEDMODE,w
  1165  0628  1D03               	btfss	3,2
  1166  0629  2E45               	goto	l1683
  1167                           
  1168                           ;main.c: 114: PCA9685_setAllOff();
  1169  062A  22C2               	fcall	_PCA9685_setAllOff
  1170                           
  1171                           ;main.c: 115: PLED_setDC(80);
  1172  062B  27C3               	fcall	PL6	;call to abstracted procedure
  1173  062C  234B               	fcall	_PLED_setDC
  1174                           
  1175                           ;main.c: 116: _delay((unsigned long)((10)*(16000000/4000.0)));
  1176  062D  3034               	movlw	52
  1177  062E  0020               	movlb	0	; select bank0
  1178  062F  00CB               	movwf	??_main+1
  1179  0630  30F1               	movlw	241
  1180  0631  00CA               	movwf	??_main
  1181  0632                     u1917:	
  1182  0632  0BCA               	decfsz	??_main,f
  1183  0633  2E32               	goto	u1917
  1184  0634  0BCB               	decfsz	??_main+1,f
  1185  0635  2E32               	goto	u1917
  1186  0636  3200               	nop2
  1187                           
  1188                           ;main.c: 117: PLED_setDC(0);
  1189  0637  0020               	movlb	0	; select bank0
  1190  0638  01A0               	clrf	PLED_setDC@setDC
  1191  0639  01A1               	clrf	PLED_setDC@setDC+1
  1192  063A  234B               	fcall	_PLED_setDC
  1193                           
  1194                           ;main.c: 118: _delay((unsigned long)((10)*(16000000/4000.0)));
  1195  063B  3034               	movlw	52
  1196  063C  0020               	movlb	0	; select bank0
  1197  063D  00CB               	movwf	??_main+1
  1198  063E  30F1               	movlw	241
  1199  063F  00CA               	movwf	??_main
  1200  0640                     u1927:	
  1201  0640  0BCA               	decfsz	??_main,f
  1202  0641  2E40               	goto	u1927
  1203  0642  0BCB               	decfsz	??_main+1,f
  1204  0643  2E40               	goto	u1927
  1205  0644  3200               	nop2
  1206  0645                     l1683:	
  1207                           
  1208                           ;main.c: 119: }
  1209                           ;main.c: 120: if(LEDMODE == 1){
  1210  0645  0020               	movlb	0	; select bank0
  1211  0646  0B62               	decfsz	_LEDMODE,w
  1212  0647  2E79               	goto	l1703
  1213                           
  1214                           ;main.c: 121: PCA9685_setAll(2047);
  1215  0648  30FF               	movlw	255
  1216  0649  00FC               	movwf	PCA9685_setAll@value
  1217  064A  3007               	movlw	7
  1218  064B  00FD               	movwf	PCA9685_setAll@value+1
  1219  064C  22DE               	fcall	_PCA9685_setAll
  1220                           
  1221                           ;main.c: 122: for(int i = 0; i < 2; i++){
  1222  064D  0020               	movlb	0	; select bank0
  1223  064E  01CC               	clrf	main@i
  1224  064F  01CD               	clrf	main@i+1
  1225  0650                     l1693:	
  1226                           
  1227                           ;main.c: 123: PLED_setDC(80);
  1228  0650  27C3               	fcall	PL6	;call to abstracted procedure
  1229  0651  234B               	fcall	_PLED_setDC
  1230                           
  1231                           ;main.c: 124: _delay((unsigned long)((10)*(16000000/4000.0)));
  1232  0652  3034               	movlw	52
  1233  0653  0020               	movlb	0	; select bank0
  1234  0654  00CB               	movwf	??_main+1
  1235  0655  30F1               	movlw	241
  1236  0656  00CA               	movwf	??_main
  1237  0657                     u1937:	
  1238  0657  0BCA               	decfsz	??_main,f
  1239  0658  2E57               	goto	u1937
  1240  0659  0BCB               	decfsz	??_main+1,f
  1241  065A  2E57               	goto	u1937
  1242  065B  3200               	nop2
  1243                           
  1244                           ;main.c: 125: PLED_setDC(0);
  1245  065C  0020               	movlb	0	; select bank0
  1246  065D  01A0               	clrf	PLED_setDC@setDC
  1247  065E  01A1               	clrf	PLED_setDC@setDC+1
  1248  065F  234B               	fcall	_PLED_setDC
  1249                           
  1250                           ;main.c: 126: _delay((unsigned long)((10)*(16000000/4000.0)));
  1251  0660  3034               	movlw	52
  1252  0661  0020               	movlb	0	; select bank0
  1253  0662  00CB               	movwf	??_main+1
  1254  0663  30F1               	movlw	241
  1255  0664  00CA               	movwf	??_main
  1256  0665                     u1947:	
  1257  0665  0BCA               	decfsz	??_main,f
  1258  0666  2E65               	goto	u1947
  1259  0667  0BCB               	decfsz	??_main+1,f
  1260  0668  2E65               	goto	u1947
  1261  0669  3200               	nop2
  1262  066A  0020               	movlb	0	; select bank0
  1263  066B  0ACC               	incf	main@i,f
  1264  066C  1903               	skipnz
  1265  066D  0ACD               	incf	main@i+1,f
  1266  066E  084D               	movf	main@i+1,w
  1267  066F  3A80               	xorlw	128
  1268  0670  00CA               	movwf	??_main
  1269  0671  3080               	movlw	128
  1270  0672  024A               	subwf	??_main,w
  1271  0673  1D03               	skipz
  1272  0674  2E77               	goto	u1655
  1273  0675  3002               	movlw	2
  1274  0676  024C               	subwf	main@i,w
  1275  0677                     u1655:	
  1276  0677  1C03               	skipc
  1277  0678  2E50               	goto	l1693
  1278  0679                     l1703:	
  1279                           
  1280                           ;main.c: 127: }
  1281                           ;main.c: 128: }
  1282                           ;main.c: 129: if(LEDMODE == 2){
  1283  0679  3002               	movlw	2
  1284  067A  0020               	movlb	0	; select bank0
  1285  067B  0662               	xorwf	_LEDMODE,w
  1286  067C  1D03               	btfss	3,2
  1287  067D  2EAF               	goto	l1723
  1288                           
  1289                           ;main.c: 130: PCA9685_setAll(3685);
  1290  067E  3065               	movlw	101
  1291  067F  00FC               	movwf	PCA9685_setAll@value
  1292  0680  300E               	movlw	14
  1293  0681  00FD               	movwf	PCA9685_setAll@value+1
  1294  0682  22DE               	fcall	_PCA9685_setAll
  1295                           
  1296                           ;main.c: 131: for(int i = 0; i < 3; i++){
  1297  0683  0020               	movlb	0	; select bank0
  1298  0684  01CE               	clrf	main@i_141
  1299  0685  01CF               	clrf	main@i_141+1
  1300  0686                     l1713:	
  1301                           
  1302                           ;main.c: 132: PLED_setDC(80);
  1303  0686  27C3               	fcall	PL6	;call to abstracted procedure
  1304  0687  234B               	fcall	_PLED_setDC
  1305                           
  1306                           ;main.c: 133: _delay((unsigned long)((10)*(16000000/4000.0)));
  1307  0688  3034               	movlw	52
  1308  0689  0020               	movlb	0	; select bank0
  1309  068A  00CB               	movwf	??_main+1
  1310  068B  30F1               	movlw	241
  1311  068C  00CA               	movwf	??_main
  1312  068D                     u1957:	
  1313  068D  0BCA               	decfsz	??_main,f
  1314  068E  2E8D               	goto	u1957
  1315  068F  0BCB               	decfsz	??_main+1,f
  1316  0690  2E8D               	goto	u1957
  1317  0691  3200               	nop2
  1318                           
  1319                           ;main.c: 134: PLED_setDC(0);
  1320  0692  0020               	movlb	0	; select bank0
  1321  0693  01A0               	clrf	PLED_setDC@setDC
  1322  0694  01A1               	clrf	PLED_setDC@setDC+1
  1323  0695  234B               	fcall	_PLED_setDC
  1324                           
  1325                           ;main.c: 135: _delay((unsigned long)((10)*(16000000/4000.0)));
  1326  0696  3034               	movlw	52
  1327  0697  0020               	movlb	0	; select bank0
  1328  0698  00CB               	movwf	??_main+1
  1329  0699  30F1               	movlw	241
  1330  069A  00CA               	movwf	??_main
  1331  069B                     u1967:	
  1332  069B  0BCA               	decfsz	??_main,f
  1333  069C  2E9B               	goto	u1967
  1334  069D  0BCB               	decfsz	??_main+1,f
  1335  069E  2E9B               	goto	u1967
  1336  069F  3200               	nop2
  1337  06A0  0020               	movlb	0	; select bank0
  1338  06A1  0ACE               	incf	main@i_141,f
  1339  06A2  1903               	skipnz
  1340  06A3  0ACF               	incf	main@i_141+1,f
  1341  06A4  084F               	movf	main@i_141+1,w
  1342  06A5  3A80               	xorlw	128
  1343  06A6  00CA               	movwf	??_main
  1344  06A7  3080               	movlw	128
  1345  06A8  024A               	subwf	??_main,w
  1346  06A9  1D03               	skipz
  1347  06AA  2EAD               	goto	u1675
  1348  06AB  3003               	movlw	3
  1349  06AC  024E               	subwf	main@i_141,w
  1350  06AD                     u1675:	
  1351  06AD  1C03               	skipc
  1352  06AE  2E86               	goto	l1713
  1353  06AF                     l1723:	
  1354                           
  1355                           ;main.c: 136: }
  1356                           ;main.c: 137: }
  1357                           ;main.c: 138: if(LEDMODE == 3){
  1358  06AF  3003               	movlw	3
  1359  06B0  0020               	movlb	0	; select bank0
  1360  06B1  0662               	xorwf	_LEDMODE,w
  1361  06B2  1D03               	btfss	3,2
  1362  06B3  2EE2               	goto	l1741
  1363                           
  1364                           ;main.c: 139: for(int i = 0; i < 4; i++){
  1365  06B4  01D0               	clrf	main@i_142
  1366  06B5  01D1               	clrf	main@i_142+1
  1367  06B6                     l1731:	
  1368                           
  1369                           ;main.c: 140: PLED_setDC(80);
  1370  06B6  27C3               	fcall	PL6	;call to abstracted procedure
  1371  06B7  234B               	fcall	_PLED_setDC
  1372                           
  1373                           ;main.c: 141: _delay((unsigned long)((10)*(16000000/4000.0)));
  1374  06B8  3034               	movlw	52
  1375  06B9  0020               	movlb	0	; select bank0
  1376  06BA  00CB               	movwf	??_main+1
  1377  06BB  30F1               	movlw	241
  1378  06BC  00CA               	movwf	??_main
  1379  06BD                     u1977:	
  1380  06BD  0BCA               	decfsz	??_main,f
  1381  06BE  2EBD               	goto	u1977
  1382  06BF  0BCB               	decfsz	??_main+1,f
  1383  06C0  2EBD               	goto	u1977
  1384  06C1  3200               	nop2
  1385                           
  1386                           ;main.c: 142: PLED_setDC(0);
  1387  06C2  0020               	movlb	0	; select bank0
  1388  06C3  01A0               	clrf	PLED_setDC@setDC
  1389  06C4  01A1               	clrf	PLED_setDC@setDC+1
  1390  06C5  234B               	fcall	_PLED_setDC
  1391                           
  1392                           ;main.c: 143: _delay((unsigned long)((10)*(16000000/4000.0)));
  1393  06C6  3034               	movlw	52
  1394  06C7  0020               	movlb	0	; select bank0
  1395  06C8  00CB               	movwf	??_main+1
  1396  06C9  30F1               	movlw	241
  1397  06CA  00CA               	movwf	??_main
  1398  06CB                     u1987:	
  1399  06CB  0BCA               	decfsz	??_main,f
  1400  06CC  2ECB               	goto	u1987
  1401  06CD  0BCB               	decfsz	??_main+1,f
  1402  06CE  2ECB               	goto	u1987
  1403  06CF  3200               	nop2
  1404  06D0  0020               	movlb	0	; select bank0
  1405  06D1  0AD0               	incf	main@i_142,f
  1406  06D2  1903               	skipnz
  1407  06D3  0AD1               	incf	main@i_142+1,f
  1408  06D4  0851               	movf	main@i_142+1,w
  1409  06D5  3A80               	xorlw	128
  1410  06D6  00CA               	movwf	??_main
  1411  06D7  3080               	movlw	128
  1412  06D8  024A               	subwf	??_main,w
  1413  06D9  1D03               	skipz
  1414  06DA  2EDD               	goto	u1695
  1415  06DB  3004               	movlw	4
  1416  06DC  0250               	subwf	main@i_142,w
  1417  06DD                     u1695:	
  1418  06DD  1C03               	skipc
  1419  06DE  2EB6               	goto	l1731
  1420                           
  1421                           ;main.c: 144: }
  1422                           ;main.c: 145: PWM_FADE_HOLD = 1;
  1423  06DF  0020               	movlb	0	; select bank0
  1424  06E0  01E6               	clrf	_PWM_FADE_HOLD
  1425  06E1  0AE6               	incf	_PWM_FADE_HOLD,f
  1426  06E2                     l1741:	
  1427                           
  1428                           ;main.c: 146: }
  1429                           ;main.c: 147: if(LEDMODE == 4){
  1430  06E2  3004               	movlw	4
  1431  06E3  0662               	xorwf	_LEDMODE,w
  1432  06E4  1D03               	btfss	3,2
  1433  06E5  2F12               	goto	l1761
  1434                           
  1435                           ;main.c: 148: for(int i = 0; i < 5; i++){
  1436  06E6  01D2               	clrf	main@i_143
  1437  06E7  01D3               	clrf	main@i_143+1
  1438  06E8                     l1749:	
  1439                           
  1440                           ;main.c: 149: PLED_setDC(80);
  1441  06E8  27C3               	fcall	PL6	;call to abstracted procedure
  1442  06E9  234B               	fcall	_PLED_setDC
  1443                           
  1444                           ;main.c: 150: _delay((unsigned long)((10)*(16000000/4000.0)));
  1445  06EA  3034               	movlw	52
  1446  06EB  0020               	movlb	0	; select bank0
  1447  06EC  00CB               	movwf	??_main+1
  1448  06ED  30F1               	movlw	241
  1449  06EE  00CA               	movwf	??_main
  1450  06EF                     u1997:	
  1451  06EF  0BCA               	decfsz	??_main,f
  1452  06F0  2EEF               	goto	u1997
  1453  06F1  0BCB               	decfsz	??_main+1,f
  1454  06F2  2EEF               	goto	u1997
  1455  06F3  3200               	nop2
  1456                           
  1457                           ;main.c: 151: PLED_setDC(0);
  1458  06F4  0020               	movlb	0	; select bank0
  1459  06F5  01A0               	clrf	PLED_setDC@setDC
  1460  06F6  01A1               	clrf	PLED_setDC@setDC+1
  1461  06F7  234B               	fcall	_PLED_setDC
  1462                           
  1463                           ;main.c: 152: _delay((unsigned long)((10)*(16000000/4000.0)));
  1464  06F8  3034               	movlw	52
  1465  06F9  0020               	movlb	0	; select bank0
  1466  06FA  00CB               	movwf	??_main+1
  1467  06FB  30F1               	movlw	241
  1468  06FC  00CA               	movwf	??_main
  1469  06FD                     u2007:	
  1470  06FD  0BCA               	decfsz	??_main,f
  1471  06FE  2EFD               	goto	u2007
  1472  06FF  0BCB               	decfsz	??_main+1,f
  1473  0700  2EFD               	goto	u2007
  1474  0701  3200               	nop2
  1475  0702  0020               	movlb	0	; select bank0
  1476  0703  0AD2               	incf	main@i_143,f
  1477  0704  1903               	skipnz
  1478  0705  0AD3               	incf	main@i_143+1,f
  1479  0706  0853               	movf	main@i_143+1,w
  1480  0707  3A80               	xorlw	128
  1481  0708  00CA               	movwf	??_main
  1482  0709  3080               	movlw	128
  1483  070A  024A               	subwf	??_main,w
  1484  070B  1D03               	skipz
  1485  070C  2F0F               	goto	u1715
  1486  070D  3005               	movlw	5
  1487  070E  0252               	subwf	main@i_143,w
  1488  070F                     u1715:	
  1489  070F  1C03               	skipc
  1490  0710  2EE8               	goto	l1749
  1491                           
  1492                           ;main.c: 153: }
  1493                           ;main.c: 154: PCA9685_setAllOff();
  1494  0711  22C2               	fcall	_PCA9685_setAllOff
  1495  0712                     l1761:	
  1496                           
  1497                           ;main.c: 155: }
  1498                           ;main.c: 156: BTN_DETECT = 0;
  1499  0712  0020               	movlb	0	; select bank0
  1500  0713  01E1               	clrf	_BTN_DETECT
  1501  0714                     l1763:	
  1502                           
  1503                           ;main.c: 157: }
  1504                           ;main.c: 159: if(LEDMODE == 3){
  1505  0714  3003               	movlw	3
  1506  0715  0662               	xorwf	_LEDMODE,w
  1507  0716  1D03               	btfss	3,2
  1508  0717  2F6F               	goto	l1805
  1509                           
  1510                           ;main.c: 160: if(PWM_FADE_HOLD == 0){
  1511  0718  0866               	movf	_PWM_FADE_HOLD,w
  1512  0719  1D03               	btfss	3,2
  1513  071A  2F3F               	goto	l1783
  1514                           
  1515                           ;main.c: 161: for(int i = 0; i < 4096; i+=128){
  1516  071B  01D5               	clrf	main@i_144
  1517  071C  01D6               	clrf	main@i_144+1
  1518  071D                     l106:	
  1519                           
  1520                           ;main.c: 162: if(PORTAbits.RA2 == 0) break;
  1521  071D  0020               	movlb	0	; select bank0
  1522  071E  1D0C               	btfss	12,2	;volatile
  1523  071F  2F3F               	goto	l1783
  1524                           
  1525                           ;main.c: 163: PCA9685_setAll(i);
  1526  0720  0856               	movf	main@i_144+1,w
  1527  0721  00FD               	movwf	PCA9685_setAll@value+1
  1528  0722  0855               	movf	main@i_144,w
  1529  0723  00FC               	movwf	PCA9685_setAll@value
  1530  0724  22DE               	fcall	_PCA9685_setAll
  1531                           
  1532                           ;main.c: 164: _delay((unsigned long)((10)*(16000000/4000.0)));
  1533  0725  3034               	movlw	52
  1534  0726  0020               	movlb	0	; select bank0
  1535  0727  00CB               	movwf	??_main+1
  1536  0728  30F1               	movlw	241
  1537  0729  00CA               	movwf	??_main
  1538  072A                     u2017:	
  1539  072A  0BCA               	decfsz	??_main,f
  1540  072B  2F2A               	goto	u2017
  1541  072C  0BCB               	decfsz	??_main+1,f
  1542  072D  2F2A               	goto	u2017
  1543  072E  3200               	nop2
  1544  072F  3080               	movlw	128
  1545  0730  0020               	movlb	0	; select bank0
  1546  0731  07D5               	addwf	main@i_144,f
  1547  0732  1803               	skipnc
  1548  0733  0AD6               	incf	main@i_144+1,f
  1549  0734  0856               	movf	main@i_144+1,w
  1550  0735  3A80               	xorlw	128
  1551  0736  00CA               	movwf	??_main
  1552  0737  3090               	movlw	144
  1553  0738  024A               	subwf	??_main,w
  1554  0739  1D03               	skipz
  1555  073A  2F3D               	goto	u1755
  1556  073B  3000               	movlw	0
  1557  073C  0255               	subwf	main@i_144,w
  1558  073D                     u1755:	
  1559  073D  1C03               	skipc
  1560  073E  2F1D               	goto	l106
  1561  073F                     l1783:	
  1562                           
  1563                           ;main.c: 165: }
  1564                           ;main.c: 166: }
  1565                           ;main.c: 167: if(PWM_FADE_HOLD == 1){
  1566  073F  0020               	movlb	0	; select bank0
  1567  0740  0B66               	decfsz	_PWM_FADE_HOLD,w
  1568  0741  2F67               	goto	l1799
  1569                           
  1570                           ;main.c: 168: for(int i = 4096; i > 0; i-=128){
  1571  0742  3010               	movlw	16
  1572  0743  01D7               	clrf	main@i_145
  1573  0744  00D8               	movwf	main@i_145+1
  1574  0745                     l110:	
  1575                           
  1576                           ;main.c: 169: if(PORTAbits.RA2 == 0) break;
  1577  0745  0020               	movlb	0	; select bank0
  1578  0746  1D0C               	btfss	12,2	;volatile
  1579  0747  2F67               	goto	l1799
  1580                           
  1581                           ;main.c: 170: PCA9685_setAll(i);
  1582  0748  0858               	movf	main@i_145+1,w
  1583  0749  00FD               	movwf	PCA9685_setAll@value+1
  1584  074A  0857               	movf	main@i_145,w
  1585  074B  00FC               	movwf	PCA9685_setAll@value
  1586  074C  22DE               	fcall	_PCA9685_setAll
  1587                           
  1588                           ;main.c: 171: _delay((unsigned long)((10)*(16000000/4000.0)));
  1589  074D  3034               	movlw	52
  1590  074E  0020               	movlb	0	; select bank0
  1591  074F  00CB               	movwf	??_main+1
  1592  0750  30F1               	movlw	241
  1593  0751  00CA               	movwf	??_main
  1594  0752                     u2027:	
  1595  0752  0BCA               	decfsz	??_main,f
  1596  0753  2F52               	goto	u2027
  1597  0754  0BCB               	decfsz	??_main+1,f
  1598  0755  2F52               	goto	u2027
  1599  0756  3200               	nop2
  1600  0757  3080               	movlw	-128
  1601  0758  0020               	movlb	0	; select bank0
  1602  0759  07D7               	addwf	main@i_145,f
  1603  075A  1C03               	skipc
  1604  075B  03D8               	decf	main@i_145+1,f
  1605  075C  0858               	movf	main@i_145+1,w
  1606  075D  3A80               	xorlw	128
  1607  075E  00CA               	movwf	??_main
  1608  075F  3080               	movlw	128
  1609  0760  024A               	subwf	??_main,w
  1610  0761  1D03               	skipz
  1611  0762  2F65               	goto	u1785
  1612  0763  3001               	movlw	1
  1613  0764  0257               	subwf	main@i_145,w
  1614  0765                     u1785:	
  1615  0765  1803               	skipnc
  1616  0766  2F45               	goto	l110
  1617  0767                     l1799:	
  1618                           
  1619                           ;main.c: 172: }
  1620                           ;main.c: 173: }
  1621                           ;main.c: 174: if(PWM_FADE_HOLD == 0) {PWM_FADE_HOLD = 1;} else {PWM_FADE_HOLD = 0;};
  1622  0767  0020               	movlb	0	; select bank0
  1623  0768  0866               	movf	_PWM_FADE_HOLD,w
  1624  0769  1D03               	btfss	3,2
  1625  076A  2F6E               	goto	l1803
  1626  076B  01E6               	clrf	_PWM_FADE_HOLD
  1627  076C  0AE6               	incf	_PWM_FADE_HOLD,f
  1628  076D  2F6F               	goto	l1805
  1629  076E                     l1803:	
  1630  076E  01E6               	clrf	_PWM_FADE_HOLD
  1631  076F                     l1805:	
  1632                           
  1633                           ;main.c: 175: }
  1634                           ;main.c: 177: if(LEDMODE == 4){
  1635  076F  3004               	movlw	4
  1636  0770  0662               	xorwf	_LEDMODE,w
  1637  0771  1D03               	btfss	3,2
  1638  0772  2DEA               	goto	l1637
  1639                           
  1640                           ;main.c: 178: PCA9685_setPWM_Simple(EYE_CYCLE_1[PATTERN_HOLD_1], 3685);
  1641  0773  3065               	movlw	101
  1642  0774  00FC               	movwf	PCA9685_setPWM_Simple@value
  1643  0775  300E               	movlw	14
  1644  0776  00FD               	movwf	PCA9685_setPWM_Simple@value+1
  1645  0777  27C8               	fcall	PL8	;call to abstracted procedure
  1646  0778  2257               	fcall	_PCA9685_setPWM_Simple
  1647                           
  1648                           ;main.c: 179: PCA9685_setPWM_Simple(MOUTH_CYCLE_1[PATTERN_HOLD_2], 3685);
  1649  0779  3065               	movlw	101
  1650  077A  00FC               	movwf	PCA9685_setPWM_Simple@value
  1651  077B  300E               	movlw	14
  1652  077C  00FD               	movwf	PCA9685_setPWM_Simple@value+1
  1653  077D  27BC               	fcall	PL2	;call to abstracted procedure
  1654  077E  2257               	fcall	_PCA9685_setPWM_Simple
  1655                           
  1656                           ;main.c: 180: for(unsigned char i = 0; i < 10; i++){
  1657  077F  0020               	movlb	0	; select bank0
  1658  0780  01D4               	clrf	main@i_146
  1659  0781                     l1811:	
  1660  0781  300A               	movlw	10
  1661  0782  0254               	subwf	main@i_146,w
  1662  0783  1803               	btfsc	3,0
  1663  0784  2F93               	goto	l1825
  1664                           
  1665                           ;main.c: 181: _delay((unsigned long)((10)*(16000000/4000.0)));
  1666  0785  3034               	movlw	52
  1667  0786  00CB               	movwf	??_main+1
  1668  0787  30F1               	movlw	241
  1669  0788  00CA               	movwf	??_main
  1670  0789                     u2037:	
  1671  0789  0BCA               	decfsz	??_main,f
  1672  078A  2F89               	goto	u2037
  1673  078B  0BCB               	decfsz	??_main+1,f
  1674  078C  2F89               	goto	u2037
  1675  078D  3200               	nop2
  1676                           
  1677                           ;main.c: 182: if(PORTAbits.RA2 == 0) break;
  1678  078E  0020               	movlb	0	; select bank0
  1679  078F  1D0C               	btfss	12,2	;volatile
  1680  0790  2F93               	goto	l1825
  1681  0791  0AD4               	incf	main@i_146,f
  1682  0792  2F81               	goto	l1811
  1683  0793                     l1825:	
  1684                           
  1685                           ;main.c: 183: }
  1686                           ;main.c: 184: PCA9685_setPWM_Simple(EYE_CYCLE_1[PATTERN_HOLD_1], 1);
  1687  0793  01FC               	clrf	PCA9685_setPWM_Simple@value
  1688  0794  0AFC               	incf	PCA9685_setPWM_Simple@value,f
  1689  0795  01FD               	clrf	PCA9685_setPWM_Simple@value+1
  1690  0796  27C8               	fcall	PL8	;call to abstracted procedure
  1691  0797  2257               	fcall	_PCA9685_setPWM_Simple
  1692                           
  1693                           ;main.c: 185: PCA9685_setPWM_Simple(MOUTH_CYCLE_1[PATTERN_HOLD_2], 1);
  1694  0798  01FC               	clrf	PCA9685_setPWM_Simple@value
  1695  0799  0AFC               	incf	PCA9685_setPWM_Simple@value,f
  1696  079A  01FD               	clrf	PCA9685_setPWM_Simple@value+1
  1697  079B  27BC               	fcall	PL2	;call to abstracted procedure
  1698  079C  2257               	fcall	_PCA9685_setPWM_Simple
  1699                           
  1700                           ;main.c: 187: PATTERN_HOLD_1++;
  1701  079D  0020               	movlb	0	; select bank0
  1702  079E  0AE3               	incf	_PATTERN_HOLD_1,f
  1703                           
  1704                           ;main.c: 188: if (PATTERN_HOLD_SW == 0){
  1705  079F  0865               	movf	_PATTERN_HOLD_SW,w
  1706  07A0  1D03               	btfss	3,2
  1707  07A1  2FA4               	goto	l1833
  1708                           
  1709                           ;main.c: 189: PATTERN_HOLD_2++;
  1710  07A2  0AE4               	incf	_PATTERN_HOLD_2,f
  1711                           
  1712                           ;main.c: 190: } else {
  1713  07A3  2FA5               	goto	l1835
  1714  07A4                     l1833:	
  1715                           
  1716                           ;main.c: 191: PATTERN_HOLD_2--;
  1717  07A4  03E4               	decf	_PATTERN_HOLD_2,f
  1718  07A5                     l1835:	
  1719                           
  1720                           ;main.c: 192: }
  1721                           ;main.c: 194: if(PATTERN_HOLD_1 == 8){
  1722  07A5  3008               	movlw	8
  1723  07A6  0663               	xorwf	_PATTERN_HOLD_1,w
  1724  07A7  1903               	btfsc	3,2
  1725                           
  1726                           ;main.c: 195: PATTERN_HOLD_1 = 0;
  1727  07A8  01E3               	clrf	_PATTERN_HOLD_1
  1728                           
  1729                           ;main.c: 196: }
  1730                           ;main.c: 197: if(PATTERN_HOLD_2 == 10 && PATTERN_HOLD_SW == 0){
  1731  07A9  300A               	movlw	10
  1732  07AA  0664               	xorwf	_PATTERN_HOLD_2,w
  1733  07AB  1D03               	btfss	3,2
  1734  07AC  2FB5               	goto	l1847
  1735  07AD  0865               	movf	_PATTERN_HOLD_SW,w
  1736  07AE  1D03               	btfss	3,2
  1737  07AF  2FB5               	goto	l1847
  1738                           
  1739                           ;main.c: 198: PATTERN_HOLD_2 = 8;
  1740  07B0  3008               	movlw	8
  1741  07B1  00E4               	movwf	_PATTERN_HOLD_2
  1742                           
  1743                           ;main.c: 199: PATTERN_HOLD_SW = 1;
  1744  07B2  01E5               	clrf	_PATTERN_HOLD_SW
  1745  07B3  0AE5               	incf	_PATTERN_HOLD_SW,f
  1746                           
  1747                           ;main.c: 200: } else if(PATTERN_HOLD_2 == 0 && PATTERN_HOLD_SW == 1){
  1748  07B4  2DEA               	goto	l1637
  1749  07B5                     l1847:	
  1750  07B5  0864               	movf	_PATTERN_HOLD_2,w
  1751  07B6  1D03               	btfss	3,2
  1752  07B7  2DEA               	goto	l1637
  1753  07B8  0B65               	decfsz	_PATTERN_HOLD_SW,w
  1754  07B9  2DEA               	goto	l1637
  1755                           
  1756                           ;main.c: 201: PATTERN_HOLD_SW = 0;
  1757  07BA  01E5               	clrf	_PATTERN_HOLD_SW
  1758  07BB  2DEA               	goto	l1637
  1759  07BC                     __end_of_main:	
  1760  07BC                     PL2:	
  1761  07BC  0020               	movlb	0	; select bank0
  1762  07BD  0864               	movf	_PATTERN_HOLD_2,w
  1763  07BE  3EA0               	addlw	(low (_MOUTH_CYCLE_1| 0))& (0+255)
  1764  07BF  0086               	movwf	6
  1765  07C0  0187               	clrf	7
  1766  07C1  0801               	movf	1,w
  1767  07C2  0008               	return
  1768  07C3                     __end_ofPL2:	
  1769  07C3                     PL6:	
  1770  07C3  3050               	movlw	80
  1771  07C4  0020               	movlb	0	; select bank0
  1772  07C5  00A0               	movwf	PLED_setDC@setDC
  1773  07C6  01A1               	clrf	PLED_setDC@setDC+1
  1774  07C7  0008               	return
  1775  07C8                     __end_ofPL6:	
  1776  07C8                     PL8:	
  1777  07C8  0863               	movf	_PATTERN_HOLD_1,w
  1778  07C9  3E59               	addlw	(low (_EYE_CYCLE_1| 0))& (0+255)
  1779  07CA  0086               	movwf	6
  1780  07CB  0187               	clrf	7
  1781  07CC  0801               	movf	1,w
  1782  07CD  0008               	return
  1783  07CE                     __end_ofPL8:	
  1784  07CE                     PL12:	
  1785  07CE  3032               	movlw	50
  1786  07CF  0020               	movlb	0	; select bank0
  1787  07D0  00A0               	movwf	PLED_setDC@setDC
  1788  07D1  01A1               	clrf	PLED_setDC@setDC+1
  1789  07D2  0008               	return
  1790  07D3                     __end_ofPL12:	
  1791                           
  1792                           	psect	text1
  1793  023A                     __ptext1:	
  1794 ;; *************** function _initLEDArray *****************
  1795 ;; Defined at:
  1796 ;;		line 74 in file "main.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;		None
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;		None
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0, pclath, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 1F/1B
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1810 ;;      Params:         0       0       0       0
  1811 ;;      Locals:         0       0       0       0
  1812 ;;      Temps:          0       0       0       0
  1813 ;;      Totals:         0       0       0       0
  1814 ;;Total ram usage:        0 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    4
  1817 ;; This function calls:
  1818 ;;		_PCA9685_reset
  1819 ;;		_PCA9685_setAllOff
  1820 ;;		_PCA9685_setPWMFreq
  1821 ;; This function is called by:
  1822 ;;		_main
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           
  1827                           ;psect for function _initLEDArray
  1828  023A                     _initLEDArray:	
  1829                           
  1830                           ;main.c: 75: PCA9685_reset();
  1831                           
  1832                           ;incstack = 0
  1833                           ; Regs used in _initLEDArray: [wreg+status,2+status,0+pclath+cstack]
  1834  023A  226A               	fcall	_PCA9685_reset
  1835                           
  1836                           ;main.c: 76: PCA9685_setPWMFreq(1000);
  1837  023B  24CD               	fcall	PL16	;call to abstracted procedure
  1838  023C  2474               	fcall	_PCA9685_setPWMFreq
  1839                           
  1840                           ;main.c: 77: PCA9685_setAllOff();
  1841  023D  2AC2               	ljmp	l1525
  1842  023E                     __end_of_initLEDArray:	
  1843                           
  1844                           	psect	text2
  1845  0474                     __ptext2:	
  1846 ;; *************** function _PCA9685_setPWMFreq *****************
  1847 ;; Defined at:
  1848 ;;		line 18 in file "PCA9685_Lib.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;  freq            2   12[COMMON] int 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  prescale_val    1   41[BANK0 ] unsigned char 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2, status,0, pclath, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 1F/2
  1859 ;;		On exit  : 1F/2
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1862 ;;      Params:         2       0       0       0
  1863 ;;      Locals:         0       1       0       0
  1864 ;;      Temps:          0       1       0       0
  1865 ;;      Totals:         2       2       0       0
  1866 ;;Total ram usage:        4 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    2
  1869 ;; This function calls:
  1870 ;;		_I2C_Write_Command
  1871 ;;		___awtoft
  1872 ;;		___ftadd
  1873 ;;		___ftdiv
  1874 ;;		___fttol
  1875 ;; This function is called by:
  1876 ;;		_initLEDArray
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           
  1881                           ;psect for function _PCA9685_setPWMFreq
  1882  0474                     _PCA9685_setPWMFreq:	
  1883                           
  1884                           ;PCA9685_Lib.c: 19: LATAbits.LATA4 = 1;
  1885                           
  1886                           ;incstack = 0
  1887                           ; Regs used in _PCA9685_setPWMFreq: [wreg+status,2+status,0+pclath+cstack]
  1888  0474  160C               	bsf	12,4	;volatile
  1889                           
  1890                           ;PCA9685_Lib.c: 20: if(freq < 40) freq = 40;
  1891  0475  087D               	movf	PCA9685_setPWMFreq@freq+1,w
  1892  0476  3A80               	xorlw	128
  1893  0477  0020               	movlb	0	; select bank0
  1894  0478  00C8               	movwf	??_PCA9685_setPWMFreq
  1895  0479  3080               	movlw	128
  1896  047A  0248               	subwf	??_PCA9685_setPWMFreq,w
  1897  047B  1D03               	skipz
  1898  047C  2C7F               	goto	u1435
  1899  047D  3028               	movlw	40
  1900  047E  027C               	subwf	PCA9685_setPWMFreq@freq,w
  1901  047F                     u1435:	
  1902  047F  1803               	skipnc
  1903  0480  2C84               	goto	l189
  1904  0481  3028               	movlw	40
  1905  0482  00FC               	movwf	PCA9685_setPWMFreq@freq
  1906  0483  01FD               	clrf	PCA9685_setPWMFreq@freq+1
  1907  0484                     l189:	
  1908                           
  1909                           ;PCA9685_Lib.c: 21: if(freq > 1000) freq = 1000;
  1910  0484  087D               	movf	PCA9685_setPWMFreq@freq+1,w
  1911  0485  3A80               	xorlw	128
  1912  0486  0020               	movlb	0	; select bank0
  1913  0487  00C8               	movwf	??_PCA9685_setPWMFreq
  1914  0488  3083               	movlw	131
  1915  0489  0248               	subwf	??_PCA9685_setPWMFreq,w
  1916  048A  1D03               	skipz
  1917  048B  2C8E               	goto	u1445
  1918  048C  30E9               	movlw	233
  1919  048D  027C               	subwf	PCA9685_setPWMFreq@freq,w
  1920  048E                     u1445:	
  1921  048E  1C03               	skipc
  1922  048F  2C91               	goto	l1513
  1923  0490  24CD               	fcall	PL16	;call to abstracted procedure
  1924  0491                     l1513:	
  1925                           
  1926                           ;PCA9685_Lib.c: 22: unsigned char prescale_val = (25000000.0 / 4096 / freq) - 1;
  1927  0491  30BC               	movlw	188
  1928  0492  0020               	movlb	0	; select bank0
  1929  0493  00A3               	movwf	___ftdiv@f1
  1930  0494  30BE               	movlw	190
  1931  0495  00A4               	movwf	___ftdiv@f1+1
  1932  0496  3045               	movlw	69
  1933  0497  00A5               	movwf	___ftdiv@f1+2
  1934  0498  087D               	movf	PCA9685_setPWMFreq@freq+1,w
  1935  0499  00F9               	movwf	___awtoft@c+1
  1936  049A  087C               	movf	PCA9685_setPWMFreq@freq,w
  1937  049B  00F8               	movwf	___awtoft@c
  1938  049C  22A7               	fcall	___awtoft
  1939  049D  0878               	movf	?___awtoft,w
  1940  049E  00A0               	movwf	___ftdiv@f2
  1941  049F  0879               	movf	?___awtoft+1,w
  1942  04A0  00A1               	movwf	___ftdiv@f2+1
  1943  04A1  087A               	movf	?___awtoft+2,w
  1944  04A2  00A2               	movwf	___ftdiv@f2+2
  1945  04A3  24D2               	fcall	___ftdiv
  1946  04A4  0820               	movf	?___ftdiv,w
  1947  04A5  00B2               	movwf	___ftadd@f2
  1948  04A6  0821               	movf	?___ftdiv+1,w
  1949  04A7  00B3               	movwf	___ftadd@f2+1
  1950  04A8  0822               	movf	?___ftdiv+2,w
  1951  04A9  00B4               	movwf	___ftadd@f2+2
  1952  04AA  3080               	movlw	128
  1953  04AB  01AF               	clrf	___ftadd@f1
  1954  04AC  00B0               	movwf	___ftadd@f1+1
  1955  04AD  30BF               	movlw	191
  1956  04AE  00B1               	movwf	___ftadd@f1+2
  1957  04AF  2532               	fcall	___ftadd
  1958  04B0  082F               	movf	?___ftadd,w
  1959  04B1  00BB               	movwf	___fttol@f1
  1960  04B2  0830               	movf	?___ftadd+1,w
  1961  04B3  00BC               	movwf	___fttol@f1+1
  1962  04B4  0831               	movf	?___ftadd+2,w
  1963  04B5  00BD               	movwf	___fttol@f1+2
  1964  04B6  23BD               	fcall	___fttol
  1965  04B7  083B               	movf	?___fttol,w
  1966  04B8  00C9               	movwf	PCA9685_setPWMFreq@prescale_val
  1967                           
  1968                           ;PCA9685_Lib.c: 23: I2C_Write_Command(0x00, 0x10);
  1969  04B9  3010               	movlw	16
  1970  04BA  00F3               	movwf	I2C_Write_Command@Data
  1971  04BB  3000               	movlw	0
  1972  04BC  224E               	fcall	_I2C_Write_Command
  1973                           
  1974                           ;PCA9685_Lib.c: 24: I2C_Write_Command(0xFE, prescale_val);
  1975  04BD  0020               	movlb	0	; select bank0
  1976  04BE  0849               	movf	PCA9685_setPWMFreq@prescale_val,w
  1977  04BF  00F3               	movwf	I2C_Write_Command@Data
  1978  04C0  30FE               	movlw	254
  1979  04C1  224E               	fcall	_I2C_Write_Command
  1980                           
  1981                           ;PCA9685_Lib.c: 25: I2C_Write_Command(0x00, 0x80);
  1982  04C2  3080               	movlw	128
  1983  04C3  00F3               	movwf	I2C_Write_Command@Data
  1984  04C4  3000               	movlw	0
  1985  04C5  224E               	fcall	_I2C_Write_Command
  1986                           
  1987                           ;PCA9685_Lib.c: 26: I2C_Write_Command(0x01, 0x04);
  1988  04C6  3004               	movlw	4
  1989  04C7  00F3               	movwf	I2C_Write_Command@Data
  1990  04C8  3001               	movlw	1
  1991  04C9  224E               	fcall	_I2C_Write_Command
  1992                           
  1993                           ;PCA9685_Lib.c: 27: LATAbits.LATA4 = 0;
  1994  04CA  0022               	movlb	2	; select bank2
  1995  04CB  120C               	bcf	12,4	;volatile
  1996  04CC  0008               	return
  1997  04CD                     __end_of_PCA9685_setPWMFreq:	
  1998  04CD                     PL16:	
  1999  04CD  30E8               	movlw	232
  2000  04CE  00FC               	movwf	PCA9685_setPWMFreq@freq
  2001  04CF  3003               	movlw	3
  2002  04D0  00FD               	movwf	PCA9685_setPWMFreq@freq+1
  2003  04D1  0008               	return
  2004  04D2                     __end_ofPL16:	
  2005                           
  2006                           	psect	text3
  2007  03BD                     __ptext3:	
  2008 ;; *************** function ___fttol *****************
  2009 ;; Defined at:
  2010 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  f1              3   27[BANK0 ] float 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  lval            4   35[BANK0 ] unsigned long 
  2015 ;;  exp1            1   39[BANK0 ] unsigned char 
  2016 ;;  sign1           1   34[BANK0 ] unsigned char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  4   27[BANK0 ] long 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0
  2021 ;; Tracked objects:
  2022 ;;		On entry : 1F/0
  2023 ;;		On exit  : 1F/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2026 ;;      Params:         0       4       0       0
  2027 ;;      Locals:         0       6       0       0
  2028 ;;      Temps:          0       3       0       0
  2029 ;;      Totals:         0      13       0       0
  2030 ;;Total ram usage:       13 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_PCA9685_setPWMFreq
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           
  2040                           ;psect for function ___fttol
  2041  03BD                     ___fttol:	
  2042                           
  2043                           ;incstack = 0
  2044                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2045  03BD  2410               	fcall	PL4	;call to abstracted procedure
  2046  03BE  1003               	clrc
  2047  03BF  0D40               	rlf	??___fttol+1,w
  2048  03C0  0D41               	rlf	??___fttol+2,w
  2049  03C1  00C7               	movwf	___fttol@exp1
  2050  03C2  0847               	movf	___fttol@exp1,w
  2051  03C3  1D03               	btfss	3,2
  2052  03C4  2BCA               	goto	l1463
  2053  03C5                     l1461:	
  2054  03C5  01BB               	clrf	?___fttol
  2055  03C6  01BC               	clrf	?___fttol+1
  2056  03C7  01BD               	clrf	?___fttol+2
  2057  03C8  01BE               	clrf	?___fttol+3
  2058  03C9  0008               	return
  2059  03CA                     l1463:	
  2060  03CA  2410               	fcall	PL4	;call to abstracted procedure
  2061  03CB  3017               	movlw	23
  2062  03CC                     u1365:	
  2063  03CC  36C1               	lsrf	??___fttol+2,f
  2064  03CD  0CC0               	rrf	??___fttol+1,f
  2065  03CE  0CBF               	rrf	??___fttol,f
  2066  03CF  0B89               	decfsz	9,f
  2067  03D0  2BCC               	goto	u1365
  2068  03D1  083F               	movf	??___fttol,w
  2069  03D2  00C2               	movwf	___fttol@sign1
  2070  03D3  17BC               	bsf	___fttol@f1+1,7
  2071  03D4  01BD               	clrf	___fttol@f1+2
  2072  03D5  083B               	movf	___fttol@f1,w
  2073  03D6  00C3               	movwf	___fttol@lval
  2074  03D7  083C               	movf	___fttol@f1+1,w
  2075  03D8  00C4               	movwf	___fttol@lval+1
  2076  03D9  083D               	movf	___fttol@f1+2,w
  2077  03DA  00C5               	movwf	___fttol@lval+2
  2078  03DB  308E               	movlw	142
  2079  03DC  01C6               	clrf	___fttol@lval+3
  2080  03DD  02C7               	subwf	___fttol@exp1,f
  2081  03DE  1FC7               	btfss	___fttol@exp1,7
  2082  03DF  2BEC               	goto	l1483
  2083  03E0  0847               	movf	___fttol@exp1,w
  2084  03E1  3A80               	xorlw	128
  2085  03E2  3E8F               	addlw	143
  2086  03E3  1C03               	btfss	3,0
  2087  03E4  2BC5               	goto	l1461
  2088  03E5                     l1479:	
  2089  03E5  36C6               	lsrf	___fttol@lval+3,f
  2090  03E6  0CC5               	rrf	___fttol@lval+2,f
  2091  03E7  0CC4               	rrf	___fttol@lval+1,f
  2092  03E8  0CC3               	rrf	___fttol@lval,f
  2093  03E9  0FC7               	incfsz	___fttol@exp1,f
  2094  03EA  2BE5               	goto	l1479
  2095  03EB  2BF9               	goto	l1491
  2096  03EC                     l1483:	
  2097  03EC  3018               	movlw	24
  2098  03ED  0247               	subwf	___fttol@exp1,w
  2099  03EE  1803               	btfsc	3,0
  2100  03EF  2BC5               	goto	l1461
  2101  03F0                     l1489:	
  2102  03F0  0847               	movf	___fttol@exp1,w
  2103  03F1  1903               	btfsc	3,2
  2104  03F2  2BF9               	goto	l1491
  2105  03F3  35C3               	lslf	___fttol@lval,f
  2106  03F4  0DC4               	rlf	___fttol@lval+1,f
  2107  03F5  0DC5               	rlf	___fttol@lval+2,f
  2108  03F6  0DC6               	rlf	___fttol@lval+3,f
  2109  03F7  03C7               	decf	___fttol@exp1,f
  2110  03F8  2BF0               	goto	l1489
  2111  03F9                     l1491:	
  2112  03F9  0842               	movf	___fttol@sign1,w
  2113  03FA  1903               	btfsc	3,2
  2114  03FB  2C07               	goto	l1495
  2115  03FC  09C3               	comf	___fttol@lval,f
  2116  03FD  09C4               	comf	___fttol@lval+1,f
  2117  03FE  09C5               	comf	___fttol@lval+2,f
  2118  03FF  09C6               	comf	___fttol@lval+3,f
  2119  0400  0AC3               	incf	___fttol@lval,f
  2120  0401  1903               	skipnz
  2121  0402  0AC4               	incf	___fttol@lval+1,f
  2122  0403  1903               	skipnz
  2123  0404  0AC5               	incf	___fttol@lval+2,f
  2124  0405  1903               	skipnz
  2125  0406  0AC6               	incf	___fttol@lval+3,f
  2126  0407                     l1495:	
  2127  0407  0846               	movf	___fttol@lval+3,w
  2128  0408  00BE               	movwf	?___fttol+3
  2129  0409  0845               	movf	___fttol@lval+2,w
  2130  040A  00BD               	movwf	?___fttol+2
  2131  040B  0844               	movf	___fttol@lval+1,w
  2132  040C  00BC               	movwf	?___fttol+1
  2133  040D  0843               	movf	___fttol@lval,w
  2134  040E  00BB               	movwf	?___fttol
  2135  040F  0008               	return
  2136  0410                     __end_of___fttol:	
  2137  0410                     PL4:	
  2138  0410  083B               	movf	___fttol@f1,w
  2139  0411  00BF               	movwf	??___fttol
  2140  0412  083C               	movf	___fttol@f1+1,w
  2141  0413  00C0               	movwf	??___fttol+1
  2142  0414  083D               	movf	___fttol@f1+2,w
  2143  0415  00C1               	movwf	??___fttol+2
  2144  0416  0008               	return
  2145  0417                     __end_ofPL4:	
  2146                           
  2147                           	psect	text4
  2148  04D2                     __ptext4:	
  2149 ;; *************** function ___ftdiv *****************
  2150 ;; Defined at:
  2151 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  f2              3    0[BANK0 ] float 
  2154 ;;  f1              3    3[BANK0 ] float 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  f3              3   10[BANK0 ] float 
  2157 ;;  sign            1   14[BANK0 ] unsigned char 
  2158 ;;  exp             1   13[BANK0 ] unsigned char 
  2159 ;;  cntr            1    9[BANK0 ] unsigned char 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  3    0[BANK0 ] float 
  2162 ;; Registers used:
  2163 ;;		wreg, status,2, status,0, pclath, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 1F/0
  2166 ;;		On exit  : 1F/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2169 ;;      Params:         0       6       0       0
  2170 ;;      Locals:         0       6       0       0
  2171 ;;      Temps:          0       3       0       0
  2172 ;;      Totals:         0      15       0       0
  2173 ;;Total ram usage:       15 bytes
  2174 ;; Hardware stack levels used:    1
  2175 ;; Hardware stack levels required when called:    1
  2176 ;; This function calls:
  2177 ;;		___ftpack
  2178 ;; This function is called by:
  2179 ;;		_PCA9685_setPWMFreq
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           
  2184                           ;psect for function ___ftdiv
  2185  04D2                     ___ftdiv:	
  2186                           
  2187                           ;incstack = 0
  2188                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2189  04D2  0823               	movf	___ftdiv@f1,w
  2190  04D3  00A6               	movwf	??___ftdiv
  2191  04D4  0824               	movf	___ftdiv@f1+1,w
  2192  04D5  00A7               	movwf	??___ftdiv+1
  2193  04D6  0825               	movf	___ftdiv@f1+2,w
  2194  04D7  00A8               	movwf	??___ftdiv+2
  2195  04D8  1003               	clrc
  2196  04D9  0D27               	rlf	??___ftdiv+1,w
  2197  04DA  0D28               	rlf	??___ftdiv+2,w
  2198  04DB  00AD               	movwf	___ftdiv@exp
  2199  04DC  082D               	movf	___ftdiv@exp,w
  2200  04DD  1D03               	btfss	3,2
  2201  04DE  2CE0               	goto	l1423
  2202  04DF  2D2E               	ljmp	PL14	;call to abstracted procedure
  2203  04E0                     l1423:	
  2204  04E0  0820               	movf	___ftdiv@f2,w
  2205  04E1  00A6               	movwf	??___ftdiv
  2206  04E2  0821               	movf	___ftdiv@f2+1,w
  2207  04E3  00A7               	movwf	??___ftdiv+1
  2208  04E4  0822               	movf	___ftdiv@f2+2,w
  2209  04E5  00A8               	movwf	??___ftdiv+2
  2210  04E6  1003               	clrc
  2211  04E7  0D27               	rlf	??___ftdiv+1,w
  2212  04E8  0D28               	rlf	??___ftdiv+2,w
  2213  04E9  00AE               	movwf	___ftdiv@sign
  2214  04EA  082E               	movf	___ftdiv@sign,w
  2215  04EB  1D03               	btfss	3,2
  2216  04EC  2CEE               	goto	l435
  2217  04ED  2D2E               	ljmp	PL14	;call to abstracted procedure
  2218  04EE                     l435:	
  2219  04EE  3089               	movlw	137
  2220  04EF  01AA               	clrf	___ftdiv@f3
  2221  04F0  01AB               	clrf	___ftdiv@f3+1
  2222  04F1  01AC               	clrf	___ftdiv@f3+2
  2223  04F2  072E               	addwf	___ftdiv@sign,w
  2224  04F3  00A6               	movwf	??___ftdiv
  2225  04F4  02AD               	subwf	___ftdiv@exp,f
  2226  04F5  0825               	movf	___ftdiv@f1+2,w
  2227  04F6  00AE               	movwf	___ftdiv@sign
  2228  04F7  0822               	movf	___ftdiv@f2+2,w
  2229  04F8  06AE               	xorwf	___ftdiv@sign,f
  2230  04F9  3080               	movlw	128
  2231  04FA  05AE               	andwf	___ftdiv@sign,f
  2232  04FB  3018               	movlw	24
  2233  04FC  17A4               	bsf	___ftdiv@f1+1,7
  2234  04FD  01A5               	clrf	___ftdiv@f1+2
  2235  04FE  17A1               	bsf	___ftdiv@f2+1,7
  2236  04FF  01A2               	clrf	___ftdiv@f2+2
  2237  0500  00A9               	movwf	___ftdiv@cntr
  2238  0501                     l1445:	
  2239  0501  35AA               	lslf	___ftdiv@f3,f
  2240  0502  0DAB               	rlf	___ftdiv@f3+1,f
  2241  0503  0DAC               	rlf	___ftdiv@f3+2,f
  2242  0504  0822               	movf	___ftdiv@f2+2,w
  2243  0505  0225               	subwf	___ftdiv@f1+2,w
  2244  0506  1D03               	skipz
  2245  0507  2D0E               	goto	u1335
  2246  0508  0821               	movf	___ftdiv@f2+1,w
  2247  0509  0224               	subwf	___ftdiv@f1+1,w
  2248  050A  1D03               	skipz
  2249  050B  2D0E               	goto	u1335
  2250  050C  0820               	movf	___ftdiv@f2,w
  2251  050D  0223               	subwf	___ftdiv@f1,w
  2252  050E                     u1335:	
  2253  050E  1C03               	skipc
  2254  050F  2D17               	goto	l1451
  2255  0510  0820               	movf	___ftdiv@f2,w
  2256  0511  02A3               	subwf	___ftdiv@f1,f
  2257  0512  0821               	movf	___ftdiv@f2+1,w
  2258  0513  3BA4               	subwfb	___ftdiv@f1+1,f
  2259  0514  0822               	movf	___ftdiv@f2+2,w
  2260  0515  3BA5               	subwfb	___ftdiv@f1+2,f
  2261  0516  142A               	bsf	___ftdiv@f3,0
  2262  0517                     l1451:	
  2263  0517  35A3               	lslf	___ftdiv@f1,f
  2264  0518  0DA4               	rlf	___ftdiv@f1+1,f
  2265  0519  0DA5               	rlf	___ftdiv@f1+2,f
  2266  051A  0BA9               	decfsz	___ftdiv@cntr,f
  2267  051B  2D01               	goto	l1445
  2268  051C  082A               	movf	___ftdiv@f3,w
  2269  051D  00F0               	movwf	___ftpack@arg
  2270  051E  082B               	movf	___ftdiv@f3+1,w
  2271  051F  00F1               	movwf	___ftpack@arg+1
  2272  0520  082C               	movf	___ftdiv@f3+2,w
  2273  0521  00F2               	movwf	___ftpack@arg+2
  2274  0522  082D               	movf	___ftdiv@exp,w
  2275  0523  00F3               	movwf	___ftpack@exp
  2276  0524  082E               	movf	___ftdiv@sign,w
  2277  0525  00F4               	movwf	___ftpack@sign
  2278  0526  237F               	fcall	___ftpack
  2279  0527  0870               	movf	?___ftpack,w
  2280  0528  00A0               	movwf	?___ftdiv
  2281  0529  0871               	movf	?___ftpack+1,w
  2282  052A  00A1               	movwf	?___ftdiv+1
  2283  052B  0872               	movf	?___ftpack+2,w
  2284  052C  00A2               	movwf	?___ftdiv+2
  2285  052D  0008               	return
  2286  052E                     __end_of___ftdiv:	
  2287  052E                     PL14:	
  2288  052E  01A0               	clrf	?___ftdiv
  2289  052F  01A1               	clrf	?___ftdiv+1
  2290  0530  01A2               	clrf	?___ftdiv+2
  2291  0531  0008               	return
  2292  0532                     __end_ofPL14:	
  2293                           
  2294                           	psect	text5
  2295  0532                     __ptext5:	
  2296 ;; *************** function ___ftadd *****************
  2297 ;; Defined at:
  2298 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  f1              3   15[BANK0 ] float 
  2301 ;;  f2              3   18[BANK0 ] float 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;  exp1            1   26[BANK0 ] unsigned char 
  2304 ;;  exp2            1   25[BANK0 ] unsigned char 
  2305 ;;  sign            1   24[BANK0 ] unsigned char 
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  3   15[BANK0 ] float 
  2308 ;; Registers used:
  2309 ;;		wreg, status,2, status,0, pclath, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 1F/0
  2312 ;;		On exit  : 1F/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2315 ;;      Params:         0       6       0       0
  2316 ;;      Locals:         0       3       0       0
  2317 ;;      Temps:          0       3       0       0
  2318 ;;      Totals:         0      12       0       0
  2319 ;;Total ram usage:       12 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    1
  2322 ;; This function calls:
  2323 ;;		___ftpack
  2324 ;; This function is called by:
  2325 ;;		_PCA9685_setPWMFreq
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           
  2330                           ;psect for function ___ftadd
  2331  0532                     ___ftadd:	
  2332                           
  2333                           ;incstack = 0
  2334                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2335  0532  082F               	movf	___ftadd@f1,w
  2336  0533  00B5               	movwf	??___ftadd
  2337  0534  0830               	movf	___ftadd@f1+1,w
  2338  0535  00B6               	movwf	??___ftadd+1
  2339  0536  0831               	movf	___ftadd@f1+2,w
  2340  0537  00B7               	movwf	??___ftadd+2
  2341  0538  1003               	clrc
  2342  0539  0D36               	rlf	??___ftadd+1,w
  2343  053A  0D37               	rlf	??___ftadd+2,w
  2344  053B  00BA               	movwf	___ftadd@exp1
  2345  053C  0832               	movf	___ftadd@f2,w
  2346  053D  00B5               	movwf	??___ftadd
  2347  053E  0833               	movf	___ftadd@f2+1,w
  2348  053F  00B6               	movwf	??___ftadd+1
  2349  0540  0834               	movf	___ftadd@f2+2,w
  2350  0541  00B7               	movwf	??___ftadd+2
  2351  0542  1003               	clrc
  2352  0543  0D36               	rlf	??___ftadd+1,w
  2353  0544  0D37               	rlf	??___ftadd+2,w
  2354  0545  00B9               	movwf	___ftadd@exp2
  2355  0546  083A               	movf	___ftadd@exp1,w
  2356  0547  1903               	btfsc	3,2
  2357  0548  2D55               	goto	l1349
  2358  0549  0839               	movf	___ftadd@exp2,w
  2359  054A  023A               	subwf	___ftadd@exp1,w
  2360  054B  0839               	movf	___ftadd@exp2,w
  2361  054C  1803               	skipnc
  2362  054D  2D5D               	goto	L5
  2363  054E  00B5               	movwf	??___ftadd
  2364  054F  083A               	movf	___ftadd@exp1,w
  2365  0550  02B5               	subwf	??___ftadd,f
  2366  0551  3019               	movlw	25
  2367  0552  0235               	subwf	??___ftadd,w
  2368  0553  1C03               	skipc
  2369  0554  2D5C               	goto	l1353
  2370  0555                     l1349:	
  2371  0555  0832               	movf	___ftadd@f2,w
  2372  0556  00AF               	movwf	?___ftadd
  2373  0557  0833               	movf	___ftadd@f2+1,w
  2374  0558  00B0               	movwf	?___ftadd+1
  2375  0559  0834               	movf	___ftadd@f2+2,w
  2376  055A  00B1               	movwf	?___ftadd+2
  2377  055B  0008               	return
  2378  055C                     l1353:	
  2379  055C  0839               	movf	___ftadd@exp2,w
  2380  055D                     L5:	
  2381  055D  1903               	btfsc	3,2
  2382  055E  0008               	return
  2383  055F  083A               	movf	___ftadd@exp1,w
  2384  0560  0239               	subwf	___ftadd@exp2,w
  2385  0561  1803               	skipnc
  2386  0562  2D6B               	goto	l1359
  2387  0563  083A               	movf	___ftadd@exp1,w
  2388  0564  00B5               	movwf	??___ftadd
  2389  0565  0839               	movf	___ftadd@exp2,w
  2390  0566  02B5               	subwf	??___ftadd,f
  2391  0567  3019               	movlw	25
  2392  0568  0235               	subwf	??___ftadd,w
  2393  0569  1803               	btfsc	3,0
  2394  056A  0008               	return
  2395  056B                     l1359:	
  2396  056B  3006               	movlw	6
  2397  056C  00B8               	movwf	___ftadd@sign
  2398  056D  1BB1               	btfsc	___ftadd@f1+2,7
  2399  056E  17B8               	bsf	___ftadd@sign,7
  2400  056F  1BB4               	btfsc	___ftadd@f2+2,7
  2401  0570  1738               	bsf	___ftadd@sign,6
  2402  0571  17B0               	bsf	___ftadd@f1+1,7
  2403  0572  01B1               	clrf	___ftadd@f1+2
  2404  0573  17B3               	bsf	___ftadd@f2+1,7
  2405  0574  01B4               	clrf	___ftadd@f2+2
  2406  0575  0839               	movf	___ftadd@exp2,w
  2407  0576  023A               	subwf	___ftadd@exp1,w
  2408  0577  1803               	skipnc
  2409  0578  2D90               	goto	l1381
  2410  0579                     l1371:	
  2411  0579  35B2               	lslf	___ftadd@f2,f
  2412  057A  0DB3               	rlf	___ftadd@f2+1,f
  2413  057B  0DB4               	rlf	___ftadd@f2+2,f
  2414  057C  03B9               	decf	___ftadd@exp2,f
  2415  057D  0839               	movf	___ftadd@exp2,w
  2416  057E  063A               	xorwf	___ftadd@exp1,w
  2417  057F  1903               	skipnz
  2418  0580  2D8B               	goto	l1379
  2419  0581  03B8               	decf	___ftadd@sign,f
  2420  0582  0838               	movf	___ftadd@sign,w
  2421  0583  3907               	andlw	7
  2422  0584  1903               	btfsc	3,2
  2423  0585  2D8B               	goto	l1379
  2424  0586  2D79               	goto	l1371
  2425  0587                     l1377:	
  2426  0587  36B1               	lsrf	___ftadd@f1+2,f
  2427  0588  0CB0               	rrf	___ftadd@f1+1,f
  2428  0589  0CAF               	rrf	___ftadd@f1,f
  2429  058A  0ABA               	incf	___ftadd@exp1,f
  2430  058B                     l1379:	
  2431  058B  083A               	movf	___ftadd@exp1,w
  2432  058C  0639               	xorwf	___ftadd@exp2,w
  2433  058D  1903               	btfsc	3,2
  2434  058E  2DAA               	goto	l417
  2435  058F  2D87               	goto	l1377
  2436  0590                     l1381:	
  2437  0590  083A               	movf	___ftadd@exp1,w
  2438  0591  0239               	subwf	___ftadd@exp2,w
  2439  0592  1803               	skipnc
  2440  0593  2DAA               	goto	l417
  2441  0594                     l1383:	
  2442  0594  35AF               	lslf	___ftadd@f1,f
  2443  0595  0DB0               	rlf	___ftadd@f1+1,f
  2444  0596  0DB1               	rlf	___ftadd@f1+2,f
  2445  0597  03BA               	decf	___ftadd@exp1,f
  2446  0598  0839               	movf	___ftadd@exp2,w
  2447  0599  063A               	xorwf	___ftadd@exp1,w
  2448  059A  1903               	skipnz
  2449  059B  2DA6               	goto	l1391
  2450  059C  03B8               	decf	___ftadd@sign,f
  2451  059D  0838               	movf	___ftadd@sign,w
  2452  059E  3907               	andlw	7
  2453  059F  1903               	btfsc	3,2
  2454  05A0  2DA6               	goto	l1391
  2455  05A1  2D94               	goto	l1383
  2456  05A2                     l1389:	
  2457  05A2  36B4               	lsrf	___ftadd@f2+2,f
  2458  05A3  0CB3               	rrf	___ftadd@f2+1,f
  2459  05A4  0CB2               	rrf	___ftadd@f2,f
  2460  05A5  0AB9               	incf	___ftadd@exp2,f
  2461  05A6                     l1391:	
  2462  05A6  083A               	movf	___ftadd@exp1,w
  2463  05A7  0639               	xorwf	___ftadd@exp2,w
  2464  05A8  1D03               	skipz
  2465  05A9  2DA2               	goto	l1389
  2466  05AA                     l417:	
  2467  05AA  1FB8               	btfss	___ftadd@sign,7
  2468  05AB  2DB5               	goto	l1397
  2469  05AC  30FF               	movlw	255
  2470  05AD  06AF               	xorwf	___ftadd@f1,f
  2471  05AE  06B0               	xorwf	___ftadd@f1+1,f
  2472  05AF  06B1               	xorwf	___ftadd@f1+2,f
  2473  05B0  0AAF               	incf	___ftadd@f1,f
  2474  05B1  1903               	skipnz
  2475  05B2  0AB0               	incf	___ftadd@f1+1,f
  2476  05B3  1903               	skipnz
  2477  05B4  0AB1               	incf	___ftadd@f1+2,f
  2478  05B5                     l1397:	
  2479  05B5  1F38               	btfss	___ftadd@sign,6
  2480  05B6  2DBC               	goto	l1403
  2481  05B7  25DE               	fcall	PL10	;call to abstracted procedure
  2482  05B8  1903               	skipnz
  2483  05B9  0AB3               	incf	___ftadd@f2+1,f
  2484  05BA  1903               	skipnz
  2485  05BB  0AB4               	incf	___ftadd@f2+2,f
  2486  05BC                     l1403:	
  2487  05BC  01B8               	clrf	___ftadd@sign
  2488  05BD  082F               	movf	___ftadd@f1,w
  2489  05BE  07B2               	addwf	___ftadd@f2,f
  2490  05BF  0830               	movf	___ftadd@f1+1,w
  2491  05C0  3DB3               	addwfc	___ftadd@f2+1,f
  2492  05C1  0831               	movf	___ftadd@f1+2,w
  2493  05C2  3DB4               	addwfc	___ftadd@f2+2,f
  2494  05C3  1FB4               	btfss	___ftadd@f2+2,7
  2495  05C4  2DCC               	goto	l1415
  2496  05C5  25DE               	fcall	PL10	;call to abstracted procedure
  2497  05C6  1903               	skipnz
  2498  05C7  0AB3               	incf	___ftadd@f2+1,f
  2499  05C8  1903               	skipnz
  2500  05C9  0AB4               	incf	___ftadd@f2+2,f
  2501  05CA  01B8               	clrf	___ftadd@sign
  2502  05CB  0AB8               	incf	___ftadd@sign,f
  2503  05CC                     l1415:	
  2504  05CC  0832               	movf	___ftadd@f2,w
  2505  05CD  00F0               	movwf	___ftpack@arg
  2506  05CE  0833               	movf	___ftadd@f2+1,w
  2507  05CF  00F1               	movwf	___ftpack@arg+1
  2508  05D0  0834               	movf	___ftadd@f2+2,w
  2509  05D1  00F2               	movwf	___ftpack@arg+2
  2510  05D2  083A               	movf	___ftadd@exp1,w
  2511  05D3  00F3               	movwf	___ftpack@exp
  2512  05D4  0838               	movf	___ftadd@sign,w
  2513  05D5  00F4               	movwf	___ftpack@sign
  2514  05D6  237F               	fcall	___ftpack
  2515  05D7  0870               	movf	?___ftpack,w
  2516  05D8  00AF               	movwf	?___ftadd
  2517  05D9  0871               	movf	?___ftpack+1,w
  2518  05DA  00B0               	movwf	?___ftadd+1
  2519  05DB  0872               	movf	?___ftpack+2,w
  2520  05DC  00B1               	movwf	?___ftadd+2
  2521  05DD  0008               	return
  2522  05DE                     __end_of___ftadd:	
  2523  05DE                     PL10:	
  2524  05DE  30FF               	movlw	255
  2525  05DF  06B2               	xorwf	___ftadd@f2,f
  2526  05E0  06B3               	xorwf	___ftadd@f2+1,f
  2527  05E1  06B4               	xorwf	___ftadd@f2+2,f
  2528  05E2  0AB2               	incf	___ftadd@f2,f
  2529  05E3  0008               	return
  2530  05E4                     __end_ofPL10:	
  2531                           
  2532                           	psect	text6
  2533  02A7                     __ptext6:	
  2534 ;; *************** function ___awtoft *****************
  2535 ;; Defined at:
  2536 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  c               2    8[COMMON] int 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  sign            1   11[COMMON] unsigned char 
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  3    8[COMMON] float 
  2543 ;; Registers used:
  2544 ;;		wreg, status,2, status,0, pclath, cstack
  2545 ;; Tracked objects:
  2546 ;;		On entry : 1F/0
  2547 ;;		On exit  : 1F/0
  2548 ;;		Unchanged: 1F/0
  2549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2550 ;;      Params:         3       0       0       0
  2551 ;;      Locals:         1       0       0       0
  2552 ;;      Temps:          0       0       0       0
  2553 ;;      Totals:         4       0       0       0
  2554 ;;Total ram usage:        4 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; Hardware stack levels required when called:    1
  2557 ;; This function calls:
  2558 ;;		___ftpack
  2559 ;; This function is called by:
  2560 ;;		_PCA9685_setPWMFreq
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           
  2565                           ;psect for function ___awtoft
  2566  02A7                     ___awtoft:	
  2567                           
  2568                           ;incstack = 0
  2569                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2570  02A7  01FB               	clrf	___awtoft@sign
  2571  02A8  1FF9               	btfss	___awtoft@c+1,7
  2572  02A9  2AB1               	goto	l1339
  2573  02AA  09F8               	comf	___awtoft@c,f
  2574  02AB  09F9               	comf	___awtoft@c+1,f
  2575  02AC  0AF8               	incf	___awtoft@c,f
  2576  02AD  1903               	skipnz
  2577  02AE  0AF9               	incf	___awtoft@c+1,f
  2578  02AF  01FB               	clrf	___awtoft@sign
  2579  02B0  0AFB               	incf	___awtoft@sign,f
  2580  02B1                     l1339:	
  2581  02B1  0878               	movf	___awtoft@c,w
  2582  02B2  00F0               	movwf	___ftpack@arg
  2583  02B3  0879               	movf	___awtoft@c+1,w
  2584  02B4  00F1               	movwf	___ftpack@arg+1
  2585  02B5  308E               	movlw	142
  2586  02B6  01F2               	clrf	___ftpack@arg+2
  2587  02B7  00F3               	movwf	___ftpack@exp
  2588  02B8  087B               	movf	___awtoft@sign,w
  2589  02B9  00F4               	movwf	___ftpack@sign
  2590  02BA  237F               	fcall	___ftpack
  2591  02BB  0870               	movf	?___ftpack,w
  2592  02BC  00F8               	movwf	?___awtoft
  2593  02BD  0871               	movf	?___ftpack+1,w
  2594  02BE  00F9               	movwf	?___awtoft+1
  2595  02BF  0872               	movf	?___ftpack+2,w
  2596  02C0  00FA               	movwf	?___awtoft+2
  2597  02C1  0008               	return
  2598  02C2                     __end_of___awtoft:	
  2599                           
  2600                           	psect	text7
  2601  037F                     __ptext7:	
  2602 ;; *************** function ___ftpack *****************
  2603 ;; Defined at:
  2604 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  arg             3    0[COMMON] unsigned um
  2607 ;;  exp             1    3[COMMON] unsigned char 
  2608 ;;  sign            1    4[COMMON] unsigned char 
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  3    0[COMMON] float 
  2613 ;; Registers used:
  2614 ;;		wreg, status,2, status,0
  2615 ;; Tracked objects:
  2616 ;;		On entry : 1F/0
  2617 ;;		On exit  : 1F/0
  2618 ;;		Unchanged: 1F/0
  2619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2620 ;;      Params:         5       0       0       0
  2621 ;;      Locals:         0       0       0       0
  2622 ;;      Temps:          3       0       0       0
  2623 ;;      Totals:         8       0       0       0
  2624 ;;Total ram usage:        8 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		___awtoft
  2630 ;;		___ftadd
  2631 ;;		___ftdiv
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           
  2636                           ;psect for function ___ftpack
  2637  037F                     ___ftpack:	
  2638                           
  2639                           ;incstack = 0
  2640                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2641  037F  0873               	movf	___ftpack@exp,w
  2642  0380  1903               	btfsc	3,2
  2643  0381  2B87               	goto	l381
  2644  0382  0872               	movf	___ftpack@arg+2,w
  2645  0383  0471               	iorwf	___ftpack@arg+1,w
  2646  0384  0470               	iorwf	___ftpack@arg,w
  2647  0385  1D03               	skipz
  2648  0386  2B8F               	goto	l1277
  2649  0387                     l381:	
  2650  0387  01F0               	clrf	?___ftpack
  2651  0388  01F1               	clrf	?___ftpack+1
  2652  0389  01F2               	clrf	?___ftpack+2
  2653  038A  0008               	return
  2654  038B                     l1275:	
  2655  038B  0AF3               	incf	___ftpack@exp,f
  2656  038C  36F2               	lsrf	___ftpack@arg+2,f
  2657  038D  0CF1               	rrf	___ftpack@arg+1,f
  2658  038E  0CF0               	rrf	___ftpack@arg,f
  2659  038F                     l1277:	
  2660  038F  30FE               	movlw	254
  2661  0390  0572               	andwf	___ftpack@arg+2,w
  2662  0391  1903               	btfsc	3,2
  2663  0392  2B9D               	goto	l1281
  2664  0393  2B8B               	goto	l1275
  2665  0394                     l1279:	
  2666  0394  0AF3               	incf	___ftpack@exp,f
  2667  0395  0AF0               	incf	___ftpack@arg,f
  2668  0396  1903               	skipnz
  2669  0397  0AF1               	incf	___ftpack@arg+1,f
  2670  0398  1903               	skipnz
  2671  0399  0AF2               	incf	___ftpack@arg+2,f
  2672  039A  36F2               	lsrf	___ftpack@arg+2,f
  2673  039B  0CF1               	rrf	___ftpack@arg+1,f
  2674  039C  0CF0               	rrf	___ftpack@arg,f
  2675  039D                     l1281:	
  2676  039D  30FF               	movlw	255
  2677  039E  0572               	andwf	___ftpack@arg+2,w
  2678  039F  1903               	btfsc	3,2
  2679  03A0  2BAA               	goto	l1285
  2680  03A1  2B94               	goto	l1279
  2681  03A2                     l1287:	
  2682  03A2  3002               	movlw	2
  2683  03A3  0273               	subwf	___ftpack@exp,w
  2684  03A4  1C03               	btfss	3,0
  2685  03A5  2BAC               	goto	l393
  2686  03A6  03F3               	decf	___ftpack@exp,f
  2687  03A7  35F0               	lslf	___ftpack@arg,f
  2688  03A8  0DF1               	rlf	___ftpack@arg+1,f
  2689  03A9  0DF2               	rlf	___ftpack@arg+2,f
  2690  03AA                     l1285:	
  2691  03AA  1FF1               	btfss	___ftpack@arg+1,7
  2692  03AB  2BA2               	goto	l1287
  2693  03AC                     l393:	
  2694  03AC  1C73               	btfss	___ftpack@exp,0
  2695  03AD  13F1               	bcf	___ftpack@arg+1,7
  2696  03AE  36F3               	lsrf	___ftpack@exp,f
  2697  03AF  0873               	movf	___ftpack@exp,w
  2698  03B0  00F7               	movwf	??___ftpack+2
  2699  03B1  01F6               	clrf	??___ftpack+1
  2700  03B2  01F5               	clrf	??___ftpack
  2701  03B3  0875               	movf	??___ftpack,w
  2702  03B4  04F0               	iorwf	___ftpack@arg,f
  2703  03B5  0876               	movf	??___ftpack+1,w
  2704  03B6  04F1               	iorwf	___ftpack@arg+1,f
  2705  03B7  0877               	movf	??___ftpack+2,w
  2706  03B8  04F2               	iorwf	___ftpack@arg+2,f
  2707  03B9  0874               	movf	___ftpack@sign,w
  2708  03BA  1D03               	btfss	3,2
  2709  03BB  17F2               	bsf	___ftpack@arg+2,7
  2710  03BC  0008               	return
  2711  03BD                     __end_of___ftpack:	
  2712                           
  2713                           	psect	text8
  2714  02C2                     __ptext8:	
  2715 ;; *************** function _PCA9685_setAllOff *****************
  2716 ;; Defined at:
  2717 ;;		line 62 in file "PCA9685_Lib.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  i               2    0[BANK0 ] int 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0, pclath, cstack
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2731 ;;      Params:         0       0       0       0
  2732 ;;      Locals:         0       2       0       0
  2733 ;;      Temps:          1       0       0       0
  2734 ;;      Totals:         1       2       0       0
  2735 ;;Total ram usage:        3 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    3
  2738 ;; This function calls:
  2739 ;;		_PCA9685_setPWM_Full
  2740 ;; This function is called by:
  2741 ;;		_initLEDArray
  2742 ;;		_main
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           
  2747                           ;psect for function _PCA9685_setAllOff
  2748  02C2                     _PCA9685_setAllOff:	
  2749  02C2                     l1525:	
  2750                           ;incstack = 0
  2751                           ; Regs used in _PCA9685_setAllOff: [wreg+status,2+status,0+pclath+cstack]
  2752                           
  2753                           
  2754                           ;PCA9685_Lib.c: 63: for(int i = 0; i<16; i++){
  2755  02C2  0020               	movlb	0	; select bank0
  2756  02C3  01A0               	clrf	PCA9685_setAllOff@i
  2757  02C4  01A1               	clrf	PCA9685_setAllOff@i+1
  2758  02C5                     l1531:	
  2759                           
  2760                           ;PCA9685_Lib.c: 64: PCA9685_setPWM_Full(i, 4095, 0);
  2761  02C5  30FF               	movlw	255
  2762  02C6  00F5               	movwf	PCA9685_setPWM_Full@on_value
  2763  02C7  300F               	movlw	15
  2764  02C8  00F6               	movwf	PCA9685_setPWM_Full@on_value+1
  2765  02C9  01F7               	clrf	PCA9685_setPWM_Full@off_value
  2766  02CA  01F8               	clrf	PCA9685_setPWM_Full@off_value+1
  2767  02CB  0020               	movlb	0	; select bank0
  2768  02CC  0820               	movf	PCA9685_setAllOff@i,w
  2769  02CD  2417               	fcall	_PCA9685_setPWM_Full
  2770  02CE  0020               	movlb	0	; select bank0
  2771  02CF  0AA0               	incf	PCA9685_setAllOff@i,f
  2772  02D0  1903               	skipnz
  2773  02D1  0AA1               	incf	PCA9685_setAllOff@i+1,f
  2774  02D2  0821               	movf	PCA9685_setAllOff@i+1,w
  2775  02D3  3A80               	xorlw	128
  2776  02D4  00FC               	movwf	??_PCA9685_setAllOff
  2777  02D5  3080               	movlw	128
  2778  02D6  027C               	subwf	??_PCA9685_setAllOff,w
  2779  02D7  1D03               	skipz
  2780  02D8  2ADB               	goto	u1455
  2781  02D9  3010               	movlw	16
  2782  02DA  0220               	subwf	PCA9685_setAllOff@i,w
  2783  02DB                     u1455:	
  2784  02DB  1803               	btfsc	3,0
  2785  02DC  0008               	return
  2786  02DD  2AC5               	goto	l1531
  2787  02DE                     __end_of_PCA9685_setAllOff:	
  2788                           
  2789                           	psect	text9
  2790  026A                     __ptext9:	
  2791 ;; *************** function _PCA9685_reset *****************
  2792 ;; Defined at:
  2793 ;;		line 74 in file "PCA9685_Lib.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0, pclath, cstack
  2802 ;; Tracked objects:
  2803 ;;		On entry : 1F/1B
  2804 ;;		On exit  : 1F/2
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2807 ;;      Params:         0       0       0       0
  2808 ;;      Locals:         0       0       0       0
  2809 ;;      Temps:          0       0       0       0
  2810 ;;      Totals:         0       0       0       0
  2811 ;;Total ram usage:        0 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    2
  2814 ;; This function calls:
  2815 ;;		_I2C_Write_Command
  2816 ;; This function is called by:
  2817 ;;		_initLEDArray
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           
  2822                           ;psect for function _PCA9685_reset
  2823  026A                     _PCA9685_reset:	
  2824                           
  2825                           ;PCA9685_Lib.c: 75: LATAbits.LATA4 = 1;
  2826                           
  2827                           ;incstack = 0
  2828                           ; Regs used in _PCA9685_reset: [wreg+status,2+status,0+pclath+cstack]
  2829  026A  0022               	movlb	2	; select bank2
  2830  026B  160C               	bsf	12,4	;volatile
  2831  026C  3000               	movlw	0
  2832                           
  2833                           ;PCA9685_Lib.c: 76: I2C_Write_Command(0x00, 0x00);
  2834  026D  01F3               	clrf	I2C_Write_Command@Data
  2835  026E  224E               	fcall	_I2C_Write_Command
  2836                           
  2837                           ;PCA9685_Lib.c: 77: I2C_Write_Command(0x01, 0x04);
  2838  026F  3004               	movlw	4
  2839  0270  00F3               	movwf	I2C_Write_Command@Data
  2840  0271  3001               	movlw	1
  2841  0272  224E               	fcall	_I2C_Write_Command
  2842                           
  2843                           ;PCA9685_Lib.c: 78: LATAbits.LATA4 = 0;
  2844  0273  0022               	movlb	2	; select bank2
  2845  0274  120C               	bcf	12,4	;volatile
  2846  0275  0008               	return
  2847  0276                     __end_of_PCA9685_reset:	
  2848                           
  2849                           	psect	text10
  2850  034B                     __ptext10:	
  2851 ;; *************** function _PLED_setDC *****************
  2852 ;; Defined at:
  2853 ;;		line 64 in file "main.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  setDC           2    0[BANK0 ] unsigned int 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  2    0[BANK0 ] unsigned int 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0, pclath, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 1F/0
  2864 ;;		On exit  : 1F/1B
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2867 ;;      Params:         0       2       0       0
  2868 ;;      Locals:         0       0       0       0
  2869 ;;      Temps:          0       4       0       0
  2870 ;;      Totals:         0       6       0       0
  2871 ;;Total ram usage:        6 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    1
  2874 ;; This function calls:
  2875 ;;		___lwdiv
  2876 ;;		___wmul
  2877 ;; This function is called by:
  2878 ;;		_main
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           
  2883                           ;psect for function _PLED_setDC
  2884  034B                     _PLED_setDC:	
  2885                           
  2886                           ;main.c: 65: if(setDC > 100){
  2887                           
  2888                           ;incstack = 0
  2889                           ; Regs used in _PLED_setDC: [wreg+status,2+status,0+pclath+cstack]
  2890  034B  3000               	movlw	0
  2891  034C  0221               	subwf	PLED_setDC@setDC+1,w
  2892  034D  3065               	movlw	101
  2893  034E  1903               	skipnz
  2894  034F  0220               	subwf	PLED_setDC@setDC,w
  2895  0350  1C03               	skipc
  2896  0351  2B57               	goto	l1603
  2897                           
  2898                           ;main.c: 66: setDC = 4095;
  2899  0352  30FF               	movlw	255
  2900  0353  00A0               	movwf	PLED_setDC@setDC
  2901  0354  300F               	movlw	15
  2902  0355  00A1               	movwf	PLED_setDC@setDC+1
  2903                           
  2904                           ;main.c: 67: } else {
  2905  0356  2B6C               	goto	l1605
  2906  0357                     l1603:	
  2907                           
  2908                           ;main.c: 68: setDC = ((setDC*4095)/100);
  2909  0357  3064               	movlw	100
  2910  0358  00F6               	movwf	___lwdiv@divisor
  2911  0359  01F7               	clrf	___lwdiv@divisor+1
  2912  035A  0821               	movf	PLED_setDC@setDC+1,w
  2913  035B  00F1               	movwf	___wmul@multiplier+1
  2914  035C  0820               	movf	PLED_setDC@setDC,w
  2915  035D  00F0               	movwf	___wmul@multiplier
  2916  035E  30FF               	movlw	255
  2917  035F  00F2               	movwf	___wmul@multiplicand
  2918  0360  300F               	movlw	15
  2919  0361  00F3               	movwf	___wmul@multiplicand+1
  2920  0362  2292               	fcall	___wmul
  2921  0363  0871               	movf	?___wmul+1,w
  2922  0364  00F9               	movwf	___lwdiv@dividend+1
  2923  0365  0870               	movf	?___wmul,w
  2924  0366  00F8               	movwf	___lwdiv@dividend
  2925  0367  22FB               	fcall	___lwdiv
  2926  0368  0877               	movf	?___lwdiv+1,w
  2927  0369  00A1               	movwf	PLED_setDC@setDC+1
  2928  036A  0876               	movf	?___lwdiv,w
  2929  036B  00A0               	movwf	PLED_setDC@setDC
  2930  036C                     l1605:	
  2931                           
  2932                           ;main.c: 69: }
  2933                           ;main.c: 70: PWM1DC = 4095 - setDC;
  2934  036C  30FF               	movlw	255
  2935  036D  00A2               	movwf	??_PLED_setDC
  2936  036E  300F               	movlw	15
  2937  036F  00A3               	movwf	??_PLED_setDC+1
  2938  0370  0820               	movf	PLED_setDC@setDC,w
  2939  0371  0222               	subwf	??_PLED_setDC,w
  2940  0372  00A4               	movwf	??_PLED_setDC+2
  2941  0373  0821               	movf	PLED_setDC@setDC+1,w
  2942  0374  3B23               	subwfb	??_PLED_setDC+1,w
  2943  0375  00A5               	movwf	??_PLED_setDC+3
  2944  0376  0824               	movf	??_PLED_setDC+2,w
  2945  0377  003B               	movlb	27	; select bank27
  2946  0378  0093               	movwf	19	;volatile
  2947  0379  0020               	movlb	0	; select bank0
  2948  037A  0825               	movf	??_PLED_setDC+3,w
  2949  037B  003B               	movlb	27	; select bank27
  2950  037C  0094               	movwf	20	;volatile
  2951                           
  2952                           ;main.c: 71: PWM1LD = 1;
  2953  037D  179F               	bsf	31,7	;volatile
  2954  037E  0008               	return
  2955  037F                     __end_of_PLED_setDC:	
  2956                           
  2957                           	psect	text11
  2958  0292                     __ptext11:	
  2959 ;; *************** function ___wmul *****************
  2960 ;; Defined at:
  2961 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  multiplier      2    0[COMMON] unsigned int 
  2964 ;;  multiplicand    2    2[COMMON] unsigned int 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  product         2    4[COMMON] unsigned int 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  2    0[COMMON] unsigned int 
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0
  2971 ;; Tracked objects:
  2972 ;;		On entry : 1F/0
  2973 ;;		On exit  : 1F/0
  2974 ;;		Unchanged: 1F/0
  2975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2976 ;;      Params:         4       0       0       0
  2977 ;;      Locals:         2       0       0       0
  2978 ;;      Temps:          0       0       0       0
  2979 ;;      Totals:         6       0       0       0
  2980 ;;Total ram usage:        6 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_PLED_setDC
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           
  2990                           ;psect for function ___wmul
  2991  0292                     ___wmul:	
  2992                           
  2993                           ;incstack = 0
  2994                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2995  0292  01F4               	clrf	___wmul@product
  2996  0293  01F5               	clrf	___wmul@product+1
  2997  0294                     l1539:	
  2998  0294  1C70               	btfss	___wmul@multiplier,0
  2999  0295  2A9A               	goto	l1543
  3000  0296  0872               	movf	___wmul@multiplicand,w
  3001  0297  07F4               	addwf	___wmul@product,f
  3002  0298  0873               	movf	___wmul@multiplicand+1,w
  3003  0299  3DF5               	addwfc	___wmul@product+1,f
  3004  029A                     l1543:	
  3005  029A  35F2               	lslf	___wmul@multiplicand,f
  3006  029B  0DF3               	rlf	___wmul@multiplicand+1,f
  3007  029C  36F1               	lsrf	___wmul@multiplier+1,f
  3008  029D  0CF0               	rrf	___wmul@multiplier,f
  3009  029E  0870               	movf	___wmul@multiplier,w
  3010  029F  0471               	iorwf	___wmul@multiplier+1,w
  3011  02A0  1D03               	btfss	3,2
  3012  02A1  2A94               	goto	l1539
  3013  02A2  0875               	movf	___wmul@product+1,w
  3014  02A3  00F1               	movwf	?___wmul+1
  3015  02A4  0874               	movf	___wmul@product,w
  3016  02A5  00F0               	movwf	?___wmul
  3017  02A6  0008               	return
  3018  02A7                     __end_of___wmul:	
  3019                           
  3020                           	psect	text12
  3021  02FB                     __ptext12:	
  3022 ;; *************** function ___lwdiv *****************
  3023 ;; Defined at:
  3024 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  divisor         2    6[COMMON] unsigned int 
  3027 ;;  dividend        2    8[COMMON] unsigned int 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;  quotient        2   10[COMMON] unsigned int 
  3030 ;;  counter         1   12[COMMON] unsigned char 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  2    6[COMMON] unsigned int 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0
  3035 ;; Tracked objects:
  3036 ;;		On entry : 1F/0
  3037 ;;		On exit  : 1F/0
  3038 ;;		Unchanged: 1F/0
  3039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3040 ;;      Params:         4       0       0       0
  3041 ;;      Locals:         3       0       0       0
  3042 ;;      Temps:          0       0       0       0
  3043 ;;      Totals:         7       0       0       0
  3044 ;;Total ram usage:        7 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_PLED_setDC
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           
  3054                           ;psect for function ___lwdiv
  3055  02FB                     ___lwdiv:	
  3056                           
  3057                           ;incstack = 0
  3058                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3059  02FB  01FA               	clrf	___lwdiv@quotient
  3060  02FC  01FB               	clrf	___lwdiv@quotient+1
  3061  02FD  0876               	movf	___lwdiv@divisor,w
  3062  02FE  0477               	iorwf	___lwdiv@divisor+1,w
  3063  02FF  1903               	btfsc	3,2
  3064  0300  2B1B               	goto	l1575
  3065  0301  01FC               	clrf	___lwdiv@counter
  3066  0302                     L6:	
  3067  0302  0AFC               	incf	___lwdiv@counter,f
  3068  0303  1BF7               	btfsc	___lwdiv@divisor+1,7
  3069  0304  2B08               	goto	l1563
  3070  0305  35F6               	lslf	___lwdiv@divisor,f
  3071  0306  0DF7               	rlf	___lwdiv@divisor+1,f
  3072  0307  2B02               	goto	L6
  3073  0308                     l1563:	
  3074  0308  35FA               	lslf	___lwdiv@quotient,f
  3075  0309  0DFB               	rlf	___lwdiv@quotient+1,f
  3076  030A  0877               	movf	___lwdiv@divisor+1,w
  3077  030B  0279               	subwf	___lwdiv@dividend+1,w
  3078  030C  1D03               	skipz
  3079  030D  2B10               	goto	u1505
  3080  030E  0876               	movf	___lwdiv@divisor,w
  3081  030F  0278               	subwf	___lwdiv@dividend,w
  3082  0310                     u1505:	
  3083  0310  1C03               	skipc
  3084  0311  2B17               	goto	l1571
  3085  0312  0876               	movf	___lwdiv@divisor,w
  3086  0313  02F8               	subwf	___lwdiv@dividend,f
  3087  0314  0877               	movf	___lwdiv@divisor+1,w
  3088  0315  3BF9               	subwfb	___lwdiv@dividend+1,f
  3089  0316  147A               	bsf	___lwdiv@quotient,0
  3090  0317                     l1571:	
  3091  0317  36F7               	lsrf	___lwdiv@divisor+1,f
  3092  0318  0CF6               	rrf	___lwdiv@divisor,f
  3093  0319  0BFC               	decfsz	___lwdiv@counter,f
  3094  031A  2B08               	goto	l1563
  3095  031B                     l1575:	
  3096  031B  087B               	movf	___lwdiv@quotient+1,w
  3097  031C  00F7               	movwf	?___lwdiv+1
  3098  031D  087A               	movf	___lwdiv@quotient,w
  3099  031E  00F6               	movwf	?___lwdiv
  3100  031F  0008               	return
  3101  0320                     __end_of___lwdiv:	
  3102                           
  3103                           	psect	text13
  3104  0257                     __ptext13:	
  3105 ;; *************** function _PCA9685_setPWM_Simple *****************
  3106 ;; Defined at:
  3107 ;;		line 52 in file "PCA9685_Lib.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  led             1    wreg     unsigned char 
  3110 ;;  value           2   12[COMMON] int 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  led             1    0[BANK0 ] unsigned char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0, pclath, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 1F/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3122 ;;      Params:         2       0       0       0
  3123 ;;      Locals:         0       1       0       0
  3124 ;;      Temps:          0       0       0       0
  3125 ;;      Totals:         2       1       0       0
  3126 ;;Total ram usage:        3 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    3
  3129 ;; This function calls:
  3130 ;;		_PCA9685_setPWM_Full
  3131 ;; This function is called by:
  3132 ;;		_main
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function _PCA9685_setPWM_Simple
  3138  0257                     _PCA9685_setPWM_Simple:	
  3139                           
  3140                           ;incstack = 0
  3141                           ; Regs used in _PCA9685_setPWM_Simple: [wreg+status,2+status,0+pclath+cstack]
  3142                           ;PCA9685_setPWM_Simple@led stored from wreg
  3143  0257  00A0               	movwf	PCA9685_setPWM_Simple@led
  3144                           
  3145                           ;PCA9685_Lib.c: 53: PCA9685_setPWM_Full(led, 0, value);
  3146  0258  01F5               	clrf	PCA9685_setPWM_Full@on_value
  3147  0259  01F6               	clrf	PCA9685_setPWM_Full@on_value+1
  3148  025A  087D               	movf	PCA9685_setPWM_Simple@value+1,w
  3149  025B  00F8               	movwf	PCA9685_setPWM_Full@off_value+1
  3150  025C  087C               	movf	PCA9685_setPWM_Simple@value,w
  3151  025D  00F7               	movwf	PCA9685_setPWM_Full@off_value
  3152  025E  0820               	movf	PCA9685_setPWM_Simple@led,w
  3153  025F  2C17               	ljmp	_PCA9685_setPWM_Full
  3154  0260                     __end_of_PCA9685_setPWM_Simple:	
  3155                           
  3156                           	psect	text14
  3157  02DE                     __ptext14:	
  3158 ;; *************** function _PCA9685_setAll *****************
  3159 ;; Defined at:
  3160 ;;		line 68 in file "PCA9685_Lib.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;  value           2   12[COMMON] int 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;  i               2    1[BANK0 ] int 
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      void 
  3167 ;; Registers used:
  3168 ;;		wreg, status,2, status,0, pclath, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 1F/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3174 ;;      Params:         2       0       0       0
  3175 ;;      Locals:         0       2       0       0
  3176 ;;      Temps:          0       1       0       0
  3177 ;;      Totals:         2       3       0       0
  3178 ;;Total ram usage:        5 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    3
  3181 ;; This function calls:
  3182 ;;		_PCA9685_setPWM_Full
  3183 ;; This function is called by:
  3184 ;;		_main
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           
  3189                           ;psect for function _PCA9685_setAll
  3190  02DE                     _PCA9685_setAll:	
  3191                           
  3192                           ;PCA9685_Lib.c: 69: for(int i = 0; i<16; i++){
  3193                           
  3194                           ;incstack = 0
  3195                           ; Regs used in _PCA9685_setAll: [wreg+status,2+status,0+pclath+cstack]
  3196  02DE  01A1               	clrf	PCA9685_setAll@i
  3197  02DF  01A2               	clrf	PCA9685_setAll@i+1
  3198  02E0                     l1619:	
  3199                           
  3200                           ;PCA9685_Lib.c: 70: PCA9685_setPWM_Full(i, 4095, value);
  3201  02E0  30FF               	movlw	255
  3202  02E1  00F5               	movwf	PCA9685_setPWM_Full@on_value
  3203  02E2  300F               	movlw	15
  3204  02E3  00F6               	movwf	PCA9685_setPWM_Full@on_value+1
  3205  02E4  087D               	movf	PCA9685_setAll@value+1,w
  3206  02E5  00F8               	movwf	PCA9685_setPWM_Full@off_value+1
  3207  02E6  087C               	movf	PCA9685_setAll@value,w
  3208  02E7  00F7               	movwf	PCA9685_setPWM_Full@off_value
  3209  02E8  0020               	movlb	0	; select bank0
  3210  02E9  0821               	movf	PCA9685_setAll@i,w
  3211  02EA  2417               	fcall	_PCA9685_setPWM_Full
  3212  02EB  0020               	movlb	0	; select bank0
  3213  02EC  0AA1               	incf	PCA9685_setAll@i,f
  3214  02ED  1903               	skipnz
  3215  02EE  0AA2               	incf	PCA9685_setAll@i+1,f
  3216  02EF  0822               	movf	PCA9685_setAll@i+1,w
  3217  02F0  3A80               	xorlw	128
  3218  02F1  00A0               	movwf	??_PCA9685_setAll
  3219  02F2  3080               	movlw	128
  3220  02F3  0220               	subwf	??_PCA9685_setAll,w
  3221  02F4  1D03               	skipz
  3222  02F5  2AF8               	goto	u1535
  3223  02F6  3010               	movlw	16
  3224  02F7  0221               	subwf	PCA9685_setAll@i,w
  3225  02F8                     u1535:	
  3226  02F8  1803               	btfsc	3,0
  3227  02F9  0008               	return
  3228  02FA  2AE0               	goto	l1619
  3229  02FB                     __end_of_PCA9685_setAll:	
  3230                           
  3231                           	psect	text15
  3232  0417                     __ptext15:	
  3233 ;; *************** function _PCA9685_setPWM_Full *****************
  3234 ;; Defined at:
  3235 ;;		line 34 in file "PCA9685_Lib.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;  led             1    wreg     unsigned char 
  3238 ;;  on_value        2    5[COMMON] int 
  3239 ;;  off_value       2    7[COMMON] int 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  led             1   11[COMMON] unsigned char 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0, pclath, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 1F/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3251 ;;      Params:         4       0       0       0
  3252 ;;      Locals:         1       0       0       0
  3253 ;;      Temps:          2       0       0       0
  3254 ;;      Totals:         7       0       0       0
  3255 ;;Total ram usage:        7 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    2
  3258 ;; This function calls:
  3259 ;;		_I2C_Write_Command
  3260 ;; This function is called by:
  3261 ;;		_PCA9685_setPWM_Simple
  3262 ;;		_PCA9685_setAllOff
  3263 ;;		_PCA9685_setAll
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           
  3268                           ;psect for function _PCA9685_setPWM_Full
  3269  0417                     _PCA9685_setPWM_Full:	
  3270                           
  3271                           ;incstack = 0
  3272                           ; Regs used in _PCA9685_setPWM_Full: [wreg+status,2+status,0+pclath+cstack]
  3273                           ;PCA9685_setPWM_Full@led stored from wreg
  3274  0417  00FB               	movwf	PCA9685_setPWM_Full@led
  3275                           
  3276                           ;PCA9685_Lib.c: 36: if(led > 15) led = 15;
  3277                           
  3278                           ;PCA9685_Lib.c: 35: if(led < 0) led = 0;
  3279  0418  3010               	movlw	16
  3280  0419  027B               	subwf	PCA9685_setPWM_Full@led,w
  3281  041A  1C03               	skipc
  3282  041B  2C1E               	goto	l1303
  3283  041C  300F               	movlw	15
  3284  041D  00FB               	movwf	PCA9685_setPWM_Full@led
  3285  041E                     l1303:	
  3286                           
  3287                           ;PCA9685_Lib.c: 37: if(on_value < 0) on_value = 0;
  3288  041E  1FF6               	btfss	PCA9685_setPWM_Full@on_value+1,7
  3289  041F  2C22               	goto	l1307
  3290  0420  01F5               	clrf	PCA9685_setPWM_Full@on_value
  3291  0421  01F6               	clrf	PCA9685_setPWM_Full@on_value+1
  3292  0422                     l1307:	
  3293                           
  3294                           ;PCA9685_Lib.c: 38: if(on_value > 4095) on_value = 4095;
  3295  0422  0876               	movf	PCA9685_setPWM_Full@on_value+1,w
  3296  0423  3A80               	xorlw	128
  3297  0424  00F9               	movwf	??_PCA9685_setPWM_Full
  3298  0425  3090               	movlw	144
  3299  0426  0279               	subwf	??_PCA9685_setPWM_Full,w
  3300  0427  1D03               	skipz
  3301  0428  2C2B               	goto	u1085
  3302  0429  3000               	movlw	0
  3303  042A  0275               	subwf	PCA9685_setPWM_Full@on_value,w
  3304  042B                     u1085:	
  3305  042B  1C03               	skipc
  3306  042C  2C31               	goto	l1311
  3307  042D  30FF               	movlw	255
  3308  042E  00F5               	movwf	PCA9685_setPWM_Full@on_value
  3309  042F  300F               	movlw	15
  3310  0430  00F6               	movwf	PCA9685_setPWM_Full@on_value+1
  3311  0431                     l1311:	
  3312                           
  3313                           ;PCA9685_Lib.c: 39: if(off_value < 0) off_value = 0;
  3314  0431  1FF8               	btfss	PCA9685_setPWM_Full@off_value+1,7
  3315  0432  2C35               	goto	l1315
  3316  0433  01F7               	clrf	PCA9685_setPWM_Full@off_value
  3317  0434  01F8               	clrf	PCA9685_setPWM_Full@off_value+1
  3318  0435                     l1315:	
  3319                           
  3320                           ;PCA9685_Lib.c: 40: if(off_value > 4095) off_value = 4095;
  3321  0435  0878               	movf	PCA9685_setPWM_Full@off_value+1,w
  3322  0436  3A80               	xorlw	128
  3323  0437  00F9               	movwf	??_PCA9685_setPWM_Full
  3324  0438  3090               	movlw	144
  3325  0439  0279               	subwf	??_PCA9685_setPWM_Full,w
  3326  043A  1D03               	skipz
  3327  043B  2C3E               	goto	u1105
  3328  043C  3000               	movlw	0
  3329  043D  0277               	subwf	PCA9685_setPWM_Full@off_value,w
  3330  043E                     u1105:	
  3331  043E  30FF               	movlw	255
  3332  043F  1C03               	skipc
  3333  0440  2C45               	goto	L7
  3334  0441  00F7               	movwf	PCA9685_setPWM_Full@off_value
  3335  0442  300F               	movlw	15
  3336  0443  00F8               	movwf	PCA9685_setPWM_Full@off_value+1
  3337                           
  3338                           ;PCA9685_Lib.c: 41: on_value = (4095 - on_value);
  3339  0444  30FF               	movlw	255
  3340  0445                     L7:	
  3341  0445  00F9               	movwf	??_PCA9685_setPWM_Full
  3342  0446  300F               	movlw	15
  3343  0447  00FA               	movwf	??_PCA9685_setPWM_Full+1
  3344  0448  0875               	movf	PCA9685_setPWM_Full@on_value,w
  3345  0449  0279               	subwf	??_PCA9685_setPWM_Full,w
  3346  044A  00F5               	movwf	PCA9685_setPWM_Full@on_value
  3347  044B  0876               	movf	PCA9685_setPWM_Full@on_value+1,w
  3348  044C  3B7A               	subwfb	??_PCA9685_setPWM_Full+1,w
  3349  044D  00F6               	movwf	PCA9685_setPWM_Full@on_value+1
  3350                           
  3351                           ;PCA9685_Lib.c: 42: off_value = (4095 - off_value);
  3352  044E  30FF               	movlw	255
  3353  044F  00F9               	movwf	??_PCA9685_setPWM_Full
  3354  0450  300F               	movlw	15
  3355  0451  00FA               	movwf	??_PCA9685_setPWM_Full+1
  3356  0452  0877               	movf	PCA9685_setPWM_Full@off_value,w
  3357  0453  0279               	subwf	??_PCA9685_setPWM_Full,w
  3358  0454  00F7               	movwf	PCA9685_setPWM_Full@off_value
  3359  0455  0878               	movf	PCA9685_setPWM_Full@off_value+1,w
  3360  0456  3B7A               	subwfb	??_PCA9685_setPWM_Full+1,w
  3361  0457  00F8               	movwf	PCA9685_setPWM_Full@off_value+1
  3362                           
  3363                           ;PCA9685_Lib.c: 43: I2C_Write_Command(0x6 + 4 * (led), on_value & 0xFF);
  3364  0458  0875               	movf	PCA9685_setPWM_Full@on_value,w
  3365  0459  00F3               	movwf	I2C_Write_Command@Data
  3366  045A  087B               	movf	PCA9685_setPWM_Full@led,w
  3367  045B  0709               	addwf	9,w
  3368  045C  0709               	addwf	9,w
  3369  045D  3E06               	addlw	6
  3370  045E  224E               	fcall	_I2C_Write_Command
  3371                           
  3372                           ;PCA9685_Lib.c: 44: I2C_Write_Command(0x7 + 4 * (led), on_value >> 8);
  3373  045F  0876               	movf	PCA9685_setPWM_Full@on_value+1,w
  3374  0460  00F3               	movwf	I2C_Write_Command@Data
  3375  0461  087B               	movf	PCA9685_setPWM_Full@led,w
  3376  0462  0709               	addwf	9,w
  3377  0463  0709               	addwf	9,w
  3378  0464  3E07               	addlw	7
  3379  0465  224E               	fcall	_I2C_Write_Command
  3380                           
  3381                           ;PCA9685_Lib.c: 45: I2C_Write_Command(0x8 + 4 * (led), off_value & 0xFF);
  3382  0466  0877               	movf	PCA9685_setPWM_Full@off_value,w
  3383  0467  00F3               	movwf	I2C_Write_Command@Data
  3384  0468  087B               	movf	PCA9685_setPWM_Full@led,w
  3385  0469  0709               	addwf	9,w
  3386  046A  0709               	addwf	9,w
  3387  046B  3E08               	addlw	8
  3388  046C  224E               	fcall	_I2C_Write_Command
  3389                           
  3390                           ;PCA9685_Lib.c: 46: I2C_Write_Command(0x9 + 4 * (led), off_value >> 8);
  3391  046D  0878               	movf	PCA9685_setPWM_Full@off_value+1,w
  3392  046E  00F3               	movwf	I2C_Write_Command@Data
  3393  046F  087B               	movf	PCA9685_setPWM_Full@led,w
  3394  0470  0709               	addwf	9,w
  3395  0471  0709               	addwf	9,w
  3396  0472  3E09               	addlw	9
  3397  0473  2A4E               	ljmp	_I2C_Write_Command
  3398  0474                     __end_of_PCA9685_setPWM_Full:	
  3399                           
  3400                           	psect	text16
  3401  024E                     __ptext16:	
  3402 ;; *************** function _I2C_Write_Command *****************
  3403 ;; Defined at:
  3404 ;;		line 10 in file "PCA9685_Lib.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;  Command         1    wreg     unsigned char 
  3407 ;;  Data            1    3[COMMON] unsigned char 
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  Command         1    4[COMMON] unsigned char 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0, pclath, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3419 ;;      Params:         1       0       0       0
  3420 ;;      Locals:         1       0       0       0
  3421 ;;      Temps:          0       0       0       0
  3422 ;;      Totals:         2       0       0       0
  3423 ;;Total ram usage:        2 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    1
  3426 ;; This function calls:
  3427 ;;		_I2C_Start
  3428 ;;		_I2C_Stop
  3429 ;;		_I2C_Write_Byte
  3430 ;; This function is called by:
  3431 ;;		_PCA9685_setPWMFreq
  3432 ;;		_PCA9685_setPWM_Full
  3433 ;;		_PCA9685_reset
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           
  3438                           ;psect for function _I2C_Write_Command
  3439  024E                     _I2C_Write_Command:	
  3440                           
  3441                           ;incstack = 0
  3442                           ; Regs used in _I2C_Write_Command: [wreg+status,2+status,0+pclath+cstack]
  3443                           ;I2C_Write_Command@Command stored from wreg
  3444  024E  00F4               	movwf	I2C_Write_Command@Command
  3445                           
  3446                           ;PCA9685_Lib.c: 11: I2C_Start();
  3447  024F  2260               	fcall	_I2C_Start
  3448                           
  3449                           ;PCA9685_Lib.c: 12: I2C_Write_Byte(0x80);
  3450  0250  3080               	movlw	128
  3451  0251  2320               	fcall	_I2C_Write_Byte
  3452                           
  3453                           ;PCA9685_Lib.c: 13: I2C_Write_Byte(Command);
  3454  0252  0874               	movf	I2C_Write_Command@Command,w
  3455  0253  2320               	fcall	_I2C_Write_Byte
  3456                           
  3457                           ;PCA9685_Lib.c: 14: I2C_Write_Byte(Data);
  3458  0254  0873               	movf	I2C_Write_Command@Data,w
  3459  0255  2320               	fcall	_I2C_Write_Byte
  3460                           
  3461                           ;PCA9685_Lib.c: 15: I2C_Stop();
  3462  0256  2A46               	ljmp	l1239
  3463  0257                     __end_of_I2C_Write_Command:	
  3464                           
  3465                           	psect	text17
  3466  0320                     __ptext17:	
  3467 ;; *************** function _I2C_Write_Byte *****************
  3468 ;; Defined at:
  3469 ;;		line 92 in file "I2C.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  Byte            1    wreg     unsigned char 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;  Byte            1    1[COMMON] unsigned char 
  3474 ;;  i               1    2[COMMON] unsigned char 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;		None               void
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 1F/1
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3484 ;;      Params:         0       0       0       0
  3485 ;;      Locals:         2       0       0       0
  3486 ;;      Temps:          1       0       0       0
  3487 ;;      Totals:         3       0       0       0
  3488 ;;Total ram usage:        3 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; This function calls:
  3491 ;;		Nothing
  3492 ;; This function is called by:
  3493 ;;		_I2C_Write_Command
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           
  3498                           ;psect for function _I2C_Write_Byte
  3499  0320                     _I2C_Write_Byte:	
  3500                           
  3501                           ;incstack = 0
  3502                           ; Regs used in _I2C_Write_Byte: [wreg+status,2+status,0]
  3503                           ;I2C_Write_Byte@Byte stored from wreg
  3504  0320  00F1               	movwf	I2C_Write_Byte@Byte
  3505                           
  3506                           ;I2C.c: 94: static bit ACK = 0;
  3507                           ;I2C.c: 96: unsigned char i;
  3508                           ;I2C.c: 98: for(i=0;i<8;i++)
  3509  0321  01F2               	clrf	I2C_Write_Byte@i
  3510  0322                     l162:	
  3511                           
  3512                           ;I2C.c: 99: {
  3513                           ;I2C.c: 100: TRISAbits.TRISA1 = 0;
  3514  0322  0021               	movlb	1	; select bank1
  3515  0323  108C               	bcf	12,1	;volatile
  3516                           
  3517                           ;I2C.c: 105: if((Byte<<i)&0x80)
  3518                           
  3519                           ;I2C.c: 102: _delay((unsigned long)((500/400/2)*(16000000/4000000.0)));
  3520  0324  0871               	movf	I2C_Write_Byte@Byte,w
  3521  0325  00F0               	movwf	??_I2C_Write_Byte
  3522  0326  0A72               	incf	I2C_Write_Byte@i,w
  3523  0327  2B29               	goto	u954
  3524  0328                     u955:	
  3525  0328  35F0               	lslf	??_I2C_Write_Byte,f
  3526  0329                     u954:	
  3527  0329  0B89               	decfsz	9,f
  3528  032A  2B28               	goto	u955
  3529  032B  1FF0               	btfss	??_I2C_Write_Byte,7
  3530  032C  2B30               	goto	l164
  3531                           
  3532                           ;I2C.c: 106: TRISAbits.TRISA0 = 1;
  3533  032D  0021               	movlb	1	; select bank1
  3534  032E  140C               	bsf	12,0	;volatile
  3535  032F  2B32               	goto	l165
  3536  0330                     l164:	
  3537                           
  3538                           ;I2C.c: 107: else
  3539                           ;I2C.c: 108: TRISAbits.TRISA0 = 0;
  3540  0330  0021               	movlb	1	; select bank1
  3541  0331  100C               	bcf	12,0	;volatile
  3542  0332                     l165:	
  3543                           
  3544                           ;I2C.c: 110: _delay((unsigned long)((500/400/2)*(16000000/4000000.0)));
  3545                           ;I2C.c: 111: TRISAbits.TRISA1 = 1;
  3546  0332  0021               	movlb	1	; select bank1
  3547  0333  148C               	bsf	12,1	;volatile
  3548                           
  3549                           ;I2C.c: 112: _delay((unsigned long)((500/400)*(16000000/4000000.0)));
  3550  0334  3200               	nop2	;2 cycle nop
  3551  0335  3200               	nop2	;2 cycle nop
  3552  0336  3008               	movlw	8
  3553  0337  0AF2               	incf	I2C_Write_Byte@i,f
  3554  0338  0272               	subwf	I2C_Write_Byte@i,w
  3555  0339  1C03               	skipc
  3556  033A  2B22               	goto	l162
  3557                           
  3558                           ;I2C.c: 113: }
  3559                           ;I2C.c: 116: TRISAbits.TRISA1 = 0;
  3560  033B  0021               	movlb	1	; select bank1
  3561  033C  108C               	bcf	12,1	;volatile
  3562                           
  3563                           ;I2C.c: 117: TRISAbits.TRISA0 = 1;
  3564  033D  140C               	bsf	12,0	;volatile
  3565                           
  3566                           ;I2C.c: 118: _delay((unsigned long)((500/400)*(16000000/4000000.0)));
  3567  033E  3200               	nop2	;2 cycle nop
  3568  033F  3200               	nop2	;2 cycle nop
  3569                           
  3570                           ;I2C.c: 119: TRISAbits.TRISA1 = 1;
  3571  0340  0021               	movlb	1	; select bank1
  3572  0341  148C               	bsf	12,1	;volatile
  3573                           
  3574                           ;I2C.c: 120: _delay((unsigned long)((500/400)*(16000000/4000000.0)));
  3575  0342  3200               	nop2	;2 cycle nop
  3576  0343  3200               	nop2	;2 cycle nop
  3577                           
  3578                           ;I2C.c: 122: TRISAbits.TRISA0 = 0;
  3579  0344  0021               	movlb	1	; select bank1
  3580  0345  100C               	bcf	12,0	;volatile
  3581                           
  3582                           ;I2C.c: 123: ACK = PORTAbits.RA0;
  3583  0346  0020               	movlb	0	; select bank0
  3584  0347  080C               	movf	12,w	;volatile
  3585                           
  3586                           ;I2C.c: 124: TRISAbits.TRISA0 = 1;
  3587  0348  0021               	movlb	1	; select bank1
  3588  0349  140C               	bsf	12,0	;volatile
  3589  034A  0008               	return
  3590  034B                     __end_of_I2C_Write_Byte:	
  3591                           
  3592                           	psect	text18
  3593  0246                     __ptext18:	
  3594 ;; *************** function _I2C_Stop *****************
  3595 ;; Defined at:
  3596 ;;		line 48 in file "I2C.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		None
  3605 ;; Tracked objects:
  3606 ;;		On entry : 1F/1
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3610 ;;      Params:         0       0       0       0
  3611 ;;      Locals:         0       0       0       0
  3612 ;;      Temps:          0       0       0       0
  3613 ;;      Totals:         0       0       0       0
  3614 ;;Total ram usage:        0 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_I2C_Write_Command
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           
  3624                           ;psect for function _I2C_Stop
  3625  0246                     _I2C_Stop:	
  3626  0246                     l1239:	
  3627                           ;incstack = 0
  3628                           ; Regs used in _I2C_Stop: []
  3629                           
  3630                           
  3631                           ;I2C.c: 50: TRISAbits.TRISA1 = 0;
  3632  0246  108C               	bcf	12,1	;volatile
  3633                           
  3634                           ;I2C.c: 52: _delay((unsigned long)((500/400/2)*(16000000/4000000.0)));
  3635                           ;I2C.c: 54: TRISAbits.TRISA0 = 0;
  3636  0247  0021               	movlb	1	; select bank1
  3637  0248  100C               	bcf	12,0	;volatile
  3638                           
  3639                           ;I2C.c: 56: _delay((unsigned long)((500/400/2)*(16000000/4000000.0)));
  3640                           ;I2C.c: 57: TRISAbits.TRISA1 = 1;
  3641  0249  0021               	movlb	1	; select bank1
  3642  024A  148C               	bsf	12,1	;volatile
  3643                           
  3644                           ;I2C.c: 58: _delay((unsigned long)((500/400/2)*(16000000/4000000.0)));
  3645                           ;I2C.c: 59: TRISAbits.TRISA0 = 1;
  3646  024B  0021               	movlb	1	; select bank1
  3647  024C  140C               	bsf	12,0	;volatile
  3648                           
  3649                           ;I2C.c: 60: _delay((unsigned long)((500/400/2)*(16000000/4000000.0)));
  3650  024D  0008               	return
  3651  024E                     __end_of_I2C_Stop:	
  3652                           
  3653                           	psect	text19
  3654  0260                     __ptext19:	
  3655 ;; *************** function _I2C_Start *****************
  3656 ;; Defined at:
  3657 ;;		line 20 in file "I2C.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;		None
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;		None
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  1    wreg      void 
  3664 ;; Registers used:
  3665 ;;		None
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3671 ;;      Params:         0       0       0       0
  3672 ;;      Locals:         0       0       0       0
  3673 ;;      Temps:          0       0       0       0
  3674 ;;      Totals:         0       0       0       0
  3675 ;;Total ram usage:        0 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_I2C_Write_Command
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           
  3685                           ;psect for function _I2C_Start
  3686  0260                     _I2C_Start:	
  3687                           
  3688                           ;I2C.c: 22: TRISAbits.TRISA1 = 1;
  3689                           
  3690                           ;incstack = 0
  3691                           ; Regs used in _I2C_Start: []
  3692  0260  0021               	movlb	1	; select bank1
  3693  0261  148C               	bsf	12,1	;volatile
  3694                           
  3695                           ;I2C.c: 23: TRISAbits.TRISA0 = 1;
  3696  0262  140C               	bsf	12,0	;volatile
  3697                           
  3698                           ;I2C.c: 24: _delay((unsigned long)((500/400)*(16000000/4000000.0)));
  3699  0263  3200               	nop2	;2 cycle nop
  3700  0264  3200               	nop2	;2 cycle nop
  3701                           
  3702                           ;I2C.c: 25: TRISAbits.TRISA0 = 0;
  3703  0265  0021               	movlb	1	; select bank1
  3704  0266  100C               	bcf	12,0	;volatile
  3705                           
  3706                           ;I2C.c: 26: _delay((unsigned long)((500/400)*(16000000/4000000.0)));
  3707  0267  3200               	nop2	;2 cycle nop
  3708  0268  3200               	nop2	;2 cycle nop
  3709  0269  0008               	return
  3710  026A                     __end_of_I2C_Start:	
  3711                           
  3712                           	psect	text20
  3713  0283                     __ptext20:	
  3714 ;; *************** function _InitPWM *****************
  3715 ;; Defined at:
  3716 ;;		line 54 in file "main.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;		None
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;		None
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		wreg, status,2
  3725 ;; Tracked objects:
  3726 ;;		On entry : B1F/2
  3727 ;;		On exit  : B1F/1B
  3728 ;;		Unchanged: B00/0
  3729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3730 ;;      Params:         0       0       0       0
  3731 ;;      Locals:         0       0       0       0
  3732 ;;      Temps:          0       0       0       0
  3733 ;;      Totals:         0       0       0       0
  3734 ;;Total ram usage:        0 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_main
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           
  3744                           ;psect for function _InitPWM
  3745  0283                     _InitPWM:	
  3746                           
  3747                           ;main.c: 56: APFCONbits.P1SEL = 1;
  3748                           
  3749                           ;incstack = 0
  3750                           ; Regs used in _InitPWM: [wreg+status,2]
  3751  0283  141D               	bsf	29,0	;volatile
  3752                           
  3753                           ;main.c: 57: PWM1CLKCON = 0b00110001;
  3754  0284  3031               	movlw	49
  3755  0285  003B               	movlb	27	; select bank27
  3756  0286  009E               	movwf	30	;volatile
  3757                           
  3758                           ;main.c: 58: PWM1PH = 0;
  3759  0287  0191               	clrf	17	;volatile
  3760  0288  0192               	clrf	18	;volatile
  3761                           
  3762                           ;main.c: 59: PWM1DC = 0;
  3763  0289  0193               	clrf	19	;volatile
  3764  028A  0194               	clrf	20	;volatile
  3765                           
  3766                           ;main.c: 60: PWM1PR = 4000;
  3767  028B  300F               	movlw	15
  3768  028C  0096               	movwf	22	;volatile
  3769  028D  30A0               	movlw	160
  3770  028E  0095               	movwf	21	;volatile
  3771                           
  3772                           ;main.c: 61: PWM1CON = 0b11000000;
  3773  028F  30C0               	movlw	192
  3774  0290  009B               	movwf	27	;volatile
  3775  0291  0008               	return
  3776  0292                     __end_of_InitPWM:	
  3777                           
  3778                           	psect	text21
  3779  023E                     __ptext21:	
  3780 ;; *************** function _InitI2C *****************
  3781 ;; Defined at:
  3782 ;;		line 4 in file "I2C.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;		None
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		None
  3791 ;; Tracked objects:
  3792 ;;		On entry : B1F/1
  3793 ;;		On exit  : B1F/2
  3794 ;;		Unchanged: B00/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3796 ;;      Params:         0       0       0       0
  3797 ;;      Locals:         0       0       0       0
  3798 ;;      Temps:          0       0       0       0
  3799 ;;      Totals:         0       0       0       0
  3800 ;;Total ram usage:        0 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; This function calls:
  3803 ;;		Nothing
  3804 ;; This function is called by:
  3805 ;;		_main
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           
  3810                           ;psect for function _InitI2C
  3811  023E                     _InitI2C:	
  3812                           
  3813                           ;I2C.c: 6: TRISAbits.TRISA0 = 1;
  3814                           
  3815                           ;incstack = 0
  3816                           ; Regs used in _InitI2C: []
  3817  023E  140C               	bsf	12,0	;volatile
  3818                           
  3819                           ;I2C.c: 7: TRISAbits.TRISA1 = 1;
  3820  023F  148C               	bsf	12,1	;volatile
  3821                           
  3822                           ;I2C.c: 10: TRISAbits.TRISA0 = 1;
  3823  0240  140C               	bsf	12,0	;volatile
  3824                           
  3825                           ;I2C.c: 11: TRISAbits.TRISA1 = 1;
  3826  0241  148C               	bsf	12,1	;volatile
  3827                           
  3828                           ;I2C.c: 14: LATAbits.LATA0 = 0;
  3829  0242  0022               	movlb	2	; select bank2
  3830  0243  100C               	bcf	12,0	;volatile
  3831                           
  3832                           ;I2C.c: 15: LATAbits.LATA1 = 0;
  3833  0244  108C               	bcf	12,1	;volatile
  3834  0245  0008               	return
  3835  0246                     __end_of_InitI2C:	
  3836                           
  3837                           	psect	text22
  3838  0276                     __ptext22:	
  3839 ;; *************** function _InitCCT *****************
  3840 ;; Defined at:
  3841 ;;		line 41 in file "main.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;		None
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      void 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2
  3850 ;; Tracked objects:
  3851 ;;		On entry : B1F/0
  3852 ;;		On exit  : B1F/1
  3853 ;;		Unchanged: B00/0
  3854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3855 ;;      Params:         0       0       0       0
  3856 ;;      Locals:         0       0       0       0
  3857 ;;      Temps:          0       0       0       0
  3858 ;;      Totals:         0       0       0       0
  3859 ;;Total ram usage:        0 bytes
  3860 ;; Hardware stack levels used:    1
  3861 ;; This function calls:
  3862 ;;		Nothing
  3863 ;; This function is called by:
  3864 ;;		_main
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           
  3869                           ;psect for function _InitCCT
  3870  0276                     _InitCCT:	
  3871                           
  3872                           ;main.c: 43: OSCCON = 0x7A;
  3873                           
  3874                           ;incstack = 0
  3875                           ; Regs used in _InitCCT: [wreg+status,2]
  3876  0276  307A               	movlw	122
  3877  0277  0021               	movlb	1	; select bank1
  3878  0278  0099               	movwf	25	;volatile
  3879                           
  3880                           ;main.c: 44: OSCSTAT = 0x00;
  3881  0279  019A               	clrf	26	;volatile
  3882                           
  3883                           ;main.c: 45: OSCTUNE = 0x00;
  3884  027A  0198               	clrf	24	;volatile
  3885                           
  3886                           ;main.c: 48: ANSELA = 0b00000000;
  3887  027B  0023               	movlb	3	; select bank3
  3888  027C  018C               	clrf	12	;volatile
  3889                           
  3890                           ;main.c: 49: LATA = 0b00000000;
  3891  027D  0022               	movlb	2	; select bank2
  3892  027E  018C               	clrf	12	;volatile
  3893                           
  3894                           ;main.c: 50: TRISA = 0b00001100;
  3895  027F  300C               	movlw	12
  3896  0280  0021               	movlb	1	; select bank1
  3897  0281  008C               	movwf	12	;volatile
  3898  0282  0008               	return
  3899  0283                     __end_of_InitCCT:	
  3900  007E                     btemp	set	126	;btemp
  3901  007E                     wtemp	set	126
  3902  007E                     wtemp0	set	126
  3903  0080                     wtemp1	set	128
  3904  0082                     wtemp2	set	130
  3905  0084                     wtemp3	set	132
  3906  0086                     wtemp4	set	134
  3907  0088                     wtemp5	set	136
  3908  007F                     wtemp6	set	127
  3909  007E                     ttemp	set	126
  3910  007E                     ttemp0	set	126
  3911  0081                     ttemp1	set	129
  3912  0084                     ttemp2	set	132
  3913  0087                     ttemp3	set	135
  3914  007F                     ttemp4	set	127
  3915  007E                     ltemp	set	126
  3916  007E                     ltemp0	set	126
  3917  0082                     ltemp1	set	130
  3918  0086                     ltemp2	set	134
  3919  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     57      71
    BANK1            80      0      10
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PCA9685_setAll
    _main->_PCA9685_setPWM_Simple
    _initLEDArray->_PCA9685_setPWMFreq
    _PCA9685_setPWMFreq->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack
    _PCA9685_setAllOff->_PCA9685_setPWM_Full
    _PCA9685_reset->_I2C_Write_Command
    _PLED_setDC->___lwdiv
    ___lwdiv->___wmul
    _PCA9685_setPWM_Simple->_PCA9685_setPWM_Full
    _PCA9685_setAll->_PCA9685_setPWM_Full
    _PCA9685_setPWM_Full->_I2C_Write_Command
    _I2C_Write_Command->_I2C_Write_Byte

Critical Paths under _main in BANK0

    _initLEDArray->_PCA9685_setPWMFreq
    _PCA9685_setPWMFreq->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   16222
                                             42 BANK0     15    15      0
                            _InitCCT
                            _InitI2C
                            _InitPWM
                     _PCA9685_setAll
                  _PCA9685_setAllOff
              _PCA9685_setPWM_Simple
                         _PLED_setDC
                       _initLEDArray
 ---------------------------------------------------------------------------------
 (1) _initLEDArray                                         0     0      0    9807
                      _PCA9685_reset
                  _PCA9685_setAllOff
                 _PCA9685_setPWMFreq
 ---------------------------------------------------------------------------------
 (2) _PCA9685_setPWMFreq                                   4     2      2    7675
                                             12 COMMON     2     0      2
                                             40 BANK0      2     2      0
                  _I2C_Write_Command
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             13     9      4     305
                                             27 BANK0     13     9      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    2056
                                              0 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    2694
                                             15 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    1812
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _PCA9685_setAllOff                                    3     3      0    1468
                                             12 COMMON     1     1      0
                                              0 BANK0      2     2      0
                _PCA9685_setPWM_Full
 ---------------------------------------------------------------------------------
 (2) _PCA9685_reset                                        0     0      0     664
                  _I2C_Write_Command
 ---------------------------------------------------------------------------------
 (1) _PLED_setDC                                           6     4      2    1223
                                              0 BANK0      6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     268
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _PCA9685_setPWM_Simple                                3     1      2    1656
                                             12 COMMON     2     0      2
                                              0 BANK0      1     1      0
                _PCA9685_setPWM_Full
 ---------------------------------------------------------------------------------
 (1) _PCA9685_setAll                                       5     3      2    1702
                                             12 COMMON     2     0      2
                                              0 BANK0      3     3      0
                _PCA9685_setPWM_Full
 ---------------------------------------------------------------------------------
 (3) _PCA9685_setPWM_Full                                  7     3      4    1400
                                              5 COMMON     7     3      4
                  _I2C_Write_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Command                                    2     1      1     664
                                              3 COMMON     2     1      1
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (4) _I2C_Write_Byte                                       3     3      0      90
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitCCT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitCCT
   _InitI2C
   _InitPWM
   _PCA9685_setAll
     _PCA9685_setPWM_Full
       _I2C_Write_Command
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
   _PCA9685_setAllOff
     _PCA9685_setPWM_Full
       _I2C_Write_Command
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
   _PCA9685_setPWM_Simple
     _PCA9685_setPWM_Full
       _I2C_Write_Command
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
   _PLED_setDC
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _initLEDArray
     _PCA9685_reset
       _I2C_Write_Command
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _PCA9685_setAllOff
       _PCA9685_setPWM_Full
         _I2C_Write_Command
           _I2C_Start
           _I2C_Stop
           _I2C_Write_Byte
     _PCA9685_setPWMFreq
       _I2C_Write_Command
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     39      47       6       88.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       A       8       12.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      5F      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Oct 29 21:01:42 2018

            __size_of_I2C_Start 000A                     __CFG_CP$OFF 0000                              PL2 07BC  
                            PL4 0410                              PL6 07C3                              PL8 07C8  
                            l78 05FD                 _PATTERN_HOLD_SW 0065             ___wmul@multiplicand 0072  
       ??_PCA9685_setPWM_Simple 007E                    ___ftadd@exp1 003A                    ___ftadd@exp2 0039  
                           PL10 05DE                             PL12 07CE                             PL14 052E  
                           PL16 04CD                     __CFG_LVP$ON 0000                    ___ftadd@sign 0038  
                           l110 0745                             l106 071D                             l162 0322  
                           l164 0330                             l165 0332                             l417 05AA  
                           l435 04EE                             l381 0387                             l189 0484  
                           l393 03AC                             u954 0329                             u955 0328  
            I2C_Write_Byte@Byte 0071                    __CFG_BORV$LO 0000                             wreg 0009  
                  ___ftdiv@cntr 0029                    ___ftdiv@sign 002E                            l1311 0431  
                          l1303 041E                            l1315 0435                            l1307 0422  
                          l1403 05BC                            l1239 0246                            l1415 05CC  
                          l1423 04E0                            l1281 039D                            l1353 055C  
                          l1513 0491                            l1603 0357                            l1531 02C5  
                          l1275 038B                            l1339 02B1                            l1371 0579  
                          l1451 0517                            l1605 036C                            l1525 02C2  
                          l1285 03AA                            l1277 038F                            l1381 0590  
                          l1349 0555                            l1445 0501                            l1461 03C5  
                          l1543 029A                            l1287 03A2                            l1279 0394  
                          l1391 05A6                            l1383 0594                            l1359 056B  
                          l1463 03CA                            l1703 0679                            l1377 0587  
                          l1713 0686                            l1619 02E0                            l1571 0317  
                          l1563 0308                            l1539 0294                            l1379 058B  
                          l1491 03F9                            l1483 03EC                            l1811 0781  
                          l1803 076E                            l1731 06B6                            l1723 06AF  
                          l1397 05B5                            l1389 05A2                            l1805 076F  
                          l1741 06E2                            l1637 05EA                            l1575 031B  
                          l1495 0407                            l1479 03E5                            l1655 0611  
                          l1671 0623                            l1489 03F0                            l1833 07A4  
                          l1825 0793                            l1761 0712                            l1673 0625  
                          l1835 07A5                            l1683 0645                            l1763 0714  
                          l1659 0615                            l1749 06E8                            l1693 0650  
                          l1847 07B5                            l1783 073F                            l1799 0767  
                          u1105 043E                            u2007 06FD                            u2017 072A  
                          u2027 0752                            u1085 042B                            u2037 0789  
                          _LATA 010C                            u1335 050E                            u1505 0310  
                          u1435 047F                            u1365 03CC                            u1445 048E  
                          u1535 02F8                            u1455 02DB                            u1715 070F  
                          u1655 0677                            u1755 073D                            u1675 06AD  
                          u1907 0603                            u1917 0632                            u1695 06DD  
                          u1927 0640                            u1785 0765                            u1937 0657  
                          u1947 0665                            u1957 068D                            u1967 069B  
                          u1977 06BD                            u1897 05F5                            u1987 06CB  
                          u1997 06EF                    __CFG_WRT$OFF 0000                            _main 05E4  
                  ___ftpack@arg 0070                    ___ftpack@exp 0073                            fsr1h 0007  
                          indf1 0001                            fsr1l 0006                            btemp 007E  
              __end_of_I2C_Stop 024E                            ltemp 007E                            start 0001  
                          ttemp 007E                            wtemp 007E                     ?_PLED_setDC 0020  
               __end_of_InitI2C 0246                 __end_of_InitCCT 0283    PCA9685_setPWM_Full@off_value 0077  
               __end_of_InitPWM 0292                    ___fttol@exp1 0047                    ___fttol@lval 0043  
                 ?_initLEDArray 0070                   __CFG_PLLEN$ON 0000                           ?_main 0070  
               __end_of___ftadd 05DE                   __CFG_WDTE$OFF 0000                 __end_of___ftdiv 052E  
               __end_of___fttol 0410         __size_of_PCA9685_setAll 001D                 __end_of___lwdiv 0320  
                         _TRISA 008C                   ___awtoft@sign 007B  PCA9685_setPWMFreq@prescale_val 0049  
                 ___ftpack@sign 0074                           main@i 004C               __end_of_I2C_Start 026A  
                __CFG_BOREN$OFF 0000                           ltemp0 007E                           ltemp1 0082  
                         ltemp2 0086                           ltemp3 0080                           ttemp0 007E  
                         ttemp1 0081                           ttemp2 0084                           ttemp3 0087  
                         ttemp4 007F                           status 0003                           wtemp0 007E  
                         wtemp1 0080                           wtemp2 0082                           wtemp3 0084  
                         wtemp4 0086                           wtemp5 0088                           wtemp6 007F  
                __CFG_MCLRE$OFF 0000                 __initialization 07D3                    __end_of_main 07BC  
                ??_initLEDArray 007E                          ??_main 004A                   ___fttol@sign1 0042  
         I2C_Write_Command@Data 0073             _PCA9685_setPWM_Full 0417             __size_of_PLED_setDC 0034  
         __end_of_PCA9685_reset 0276                __end_of___awtoft 02C2                          _ANSELA 018C  
              __end_of___ftpack 03BD                          _OSCCON 0099                          _PWM1DC 0D93  
                        _PWM1LD 6CFF                          _PWM1PH 0D91                          _PWM1PR 0D95  
                     ??_InitI2C 0070                       ??_InitCCT 0070            ?_PCA9685_setPWM_Full 0075  
                     ??_InitPWM 0070                  __CFG_PWRTE$OFF 0000      PCA9685_setPWM_Simple@value 007C  
                        ___wmul 0292                       ??___ftadd 0035                  __CFG_STVREN$ON 0000  
                     ??___ftdiv 0026                       ??___fttol 003F                       ??___lwdiv 007A  
               PCA9685_setAll@i 0021                       ?_I2C_Stop 0070        I2C_Write_Command@Command 0074  
       __end_of__initialization 07FE           ??_PCA9685_setPWM_Full 0079                      ___ftadd@f1 002F  
                    ___ftadd@f2 0032        PCA9685_setPWM_Simple@led 0020                 I2C_Write_Byte@i 0072  
                    ___ftdiv@f1 0023                      ___ftdiv@f2 0020                      ___ftdiv@f3 002A  
                    ___awtoft@c 0078                      ___fttol@f1 003B                  __pcstackCOMMON 0070  
                  __pidataBANK0 0000                    __pidataBANK1 0000                      __end_ofPL2 07C3  
                    __end_ofPL4 0417                      __end_ofPL6 07C8                      __end_ofPL8 07CE  
    __end_of_PCA9685_setPWMFreq 04CD                  _PCA9685_setAll 02DE  __size_of_PCA9685_setPWM_Simple 0009  
             _PCA9685_setAllOff 02C2   __end_of_PCA9685_setPWM_Simple 0260                      ??_I2C_Stop 0070  
            ?_PCA9685_setAllOff 0070            __end_of_initLEDArray 023E                      __pbssBANK0 0061  
           ??_PCA9685_setAllOff 007C                    ??_PLED_setDC 0022                      __pmaintext 05E4  
                       ?___wmul 0070               _I2C_Write_Command 024E          __end_of_PCA9685_setAll 02FB  
       __size_of_I2C_Write_Byte 002B       __end_of_PCA9685_setAllOff 02DE                       ?___awtoft 0078  
                     ?___ftpack 0070              ?_I2C_Write_Command 0073                         _LEDMODE 0062  
                       _OSCSTAT 009A                         _OSCTUNE 0098                         _PWM1CON 0D9B  
           ??_I2C_Write_Command 0074              __end_of_PLED_setDC 037F                         _InitI2C 023E  
                       _InitCCT 0276                         _InitPWM 0283                       _I2C_Start 0260  
     __end_of_I2C_Write_Command 0257                         ___ftadd 0532                         ___ftdiv 04D2  
               __size_of___wmul 0015                         ___fttol 03BD                         ___lwdiv 02FB  
               ?_PCA9685_setAll 007C                      ??___awtoft 007B                      ??___ftpack 0075  
                       __ptext1 023A                         __ptext2 0474                         __ptext3 03BD  
                       __ptext4 04D2                         __ptext5 0532                         __ptext6 02A7  
                       __ptext7 037F                         __ptext8 02C2                         __ptext9 026A  
          end_of_initialization 07FE                      ?_I2C_Start 0070      __size_of_PCA9685_setAllOff 001C  
                     _PORTAbits 000C                __CFG_FOSC$INTOSC 0000           __size_of_initLEDArray 0004  
                     _TRISAbits 008C               __size_of_I2C_Stop 0008                  _PATTERN_HOLD_1 0063  
                _PATTERN_HOLD_2 0064                     ___ftdiv@exp 002D      __size_of_I2C_Write_Command 0009  
                _I2C_Write_Byte 0320                    _initLEDArray 023A          __size_of_PCA9685_reset 000C  
                __end_of___wmul 02A7                     __end_ofPL10 05E4                     __end_ofPL12 07D3  
                   __end_ofPL14 0532                     __end_ofPL16 04D2             start_initialization 07D3  
                 _MOUTH_CYCLE_1 00A0     __end_of_PCA9685_setPWM_Full 0474              _PCA9685_setPWMFreq 0474  
                   ??_I2C_Start 0070             ?_PCA9685_setPWMFreq 007C                __CFG_LPBOREN$OFF 0000  
        __end_of_I2C_Write_Byte 034B                        ??___wmul 0074             PCA9685_setAll@value 007C  
                   __pdataBANK0 0059                     __pdataBANK1 00A0               __size_of___awtoft 001B  
             __size_of___ftpack 003E            ??_PCA9685_setPWMFreq 0048                       ___latbits 0000  
                 __pcstackBANK0 0020           _PCA9685_setPWM_Simple 0257                   _PCA9685_reset 026A  
                      ?_InitI2C 0070                        ?_InitCCT 0070                        ?_InitPWM 0070  
              ??_PCA9685_setAll 0020                ___lwdiv@dividend 0078                 ?_I2C_Write_Byte 0070  
                      ?___ftadd 002F                        ?___ftdiv 0020                        ?___fttol 003B  
                      ?___lwdiv 0076                 PLED_setDC@setDC 0020                        _I2C_Stop 0246  
              ___lwdiv@quotient 007A                  ?_PCA9685_reset 0070                  ___wmul@product 0074  
                      _LATAbits 010C     PCA9685_setPWM_Full@on_value 0075                       main@i_141 004E  
                     main@i_142 0050                       main@i_143 0052                       main@i_144 0055  
                     main@i_145 0057                       main@i_146 0054               ___wmul@multiplier 0070  
        PCA9685_setPWMFreq@freq 007C          ?_PCA9685_setPWM_Simple 007C                     _EYE_CYCLE_1 0059  
        PCA9685_setPWM_Full@led 007B                __size_of_InitI2C 0008                __size_of_InitCCT 000D  
              __size_of_InitPWM 000F              PCA9685_setAllOff@i 0020                      _APFCONbits 011D  
              __size_of___ftadd 00AC                __size_of___ftdiv 005C                __size_of___fttol 0053  
              __size_of___lwdiv 0025                        ___awtoft 02A7                        ___ftpack 037F  
               ??_PCA9685_reset 0075                 ___lwdiv@divisor 0076                 ___lwdiv@counter 007C  
                      __ptext10 034B                        __ptext11 0292                        __ptext20 0283  
                      __ptext12 02FB                        __ptext21 023E                        __ptext13 0257  
                      __ptext22 0276                        __ptext14 02DE                        __ptext15 0417  
                      __ptext16 024E                        __ptext17 0320                        __ptext18 0246  
                      __ptext19 0260                   __size_of_main 01D8                      _BTN_DETECT 0061  
              ??_I2C_Write_Byte 0070                   _PWM_FADE_HOLD 0066               __CFG_CLKOUTEN$OFF 0000  
  __size_of_PCA9685_setPWM_Full 005D                      _PLED_setDC 034B                      _PWM1CLKCON 0D9E  
   __size_of_PCA9685_setPWMFreq 0059  
